{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Tasks\\\\Tasks.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport CreateProjectModal from '../CreateProjectModal';\nimport { connect } from 'react-redux';\nimport ActionTypes from '../../store/Actions/index.js';\nimport axios from 'axios';\nimport * as css from \"./StylesTasks.css\";\nimport Moment from 'react-moment';\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getProjectsListHandler(\"\");\n    };\n\n    this.getProjectsListHandler = apikey => {\n      axios.get('http://localhost:57392/task?apikey=qwerty').then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            tasks: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.createNewProjectHandler = (name, descr) => {\n      axios.post('http://localhost:57392/project', {\n        apikey: 'qwerty',\n        project_name: name,\n        description: descr\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.getProjectsListHandler(\"\");\n        }\n      });\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.state = {\n      tasks: {\n        admin_task_list: [],\n        new_tasks: [],\n        dev_tasks: [],\n        qa_tasks: [],\n        ready_tasks: []\n      },\n      isShow: false,\n      isRequested: false\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.new_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, task.title), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Development: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.new_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, task.title), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"QA: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.new_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, task.title), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.new_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, task.title), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0412\\u0430\\u043C\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.admin_task_list.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, task.task_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/userPage/\" + task.creater_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(CreateProjectModal, {\n        show: this.state.isShow,\n        onHide: () => this.setShow(false),\n        onSave: (name, descr) => this.createNewProjectHandler(name, descr),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  tasks: state.Tasks,\n  isShow: false,\n  isRequested: state.Tasks ? state.Tasks.IsRequested : false\n});\n\nexport default connect(mapStateToProps, null)(Tasks);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Tasks/Tasks.js"],"names":["React","Component","ListGroup","Button","CreateProjectModal","connect","ActionTypes","axios","css","Moment","Tasks","constructor","props","componentDidMount","getProjectsListHandler","apikey","get","then","response","data","error","alert","setState","tasks","isRequested","createNewProjectHandler","name","descr","post","project_name","description","setShow","value","isShow","state","admin_task_list","new_tasks","dev_tasks","qa_tasks","ready_tasks","render","map","task","task_id","title","Date","date_create","hours_count","creater_full_name","task_status_text","task_name","creater_id","mapStateToProps","IsRequested"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CreateProjectModal from '../CreateProjectModal';\r\nimport { connect } from 'react-redux';\r\nimport ActionTypes from '../../store/Actions/index.js';\r\nimport axios from 'axios';\r\nimport * as css from \"./StylesTasks.css\";\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass Tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: {\r\n                admin_task_list: [],\r\n                new_tasks: [],\r\n                dev_tasks: [],\r\n                qa_tasks: [],\r\n                ready_tasks: []\r\n            },\r\n            isShow: false,\r\n            isRequested: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProjectsListHandler(\"\");\r\n    };\r\n\r\n    getProjectsListHandler = (apikey) => {\r\n        axios.get('http://localhost:57392/task?apikey=qwerty').then(response => {\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setState({ tasks: response.data.data, isRequested: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    createNewProjectHandler = (name, descr) => {\r\n        axios.post('http://localhost:57392/project',\r\n            {\r\n                apikey: 'qwerty',\r\n                project_name: name,\r\n                description: descr\r\n            }).then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.getProjectsListHandler(\"\");\r\n                }\r\n            });\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main_fon\">\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Новые задачи: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.new_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.title}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Development: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.new_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.title}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">QA: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.new_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.title}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Завершенные задачи: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.new_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.title}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Созданные Вами задачи: </div></div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.admin_task_list.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.task_name}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <a className=\"inline_element\" href={\"/userPage/\" + task.creater_id}>{task.creater_full_name}</a>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n\r\n\r\n                <CreateProjectModal show={this.state.isShow}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(name, descr) => this.createNewProjectHandler(name, descr)} />\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tasks: state.Tasks,\r\n    isShow: false,\r\n    isRequested: state.Tasks ? state.Tasks.IsRequested : false\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Tasks);"]},"metadata":{},"sourceType":"module"}