{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\ChangeTaskStatusModal\\\\ChangeTaskStatusModal.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { connect } from 'react-redux';\nimport { DropdownButton, Dropdown, InputGroup } from 'react-bootstrap';\n\nclass ChangeTaskStatusModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectHandler = event => {\n      console.log(event.target.innerHTML);\n      let number = 0;\n\n      if (event.target.innerHTML === \"New\") {\n        number = 0;\n      } else if (event.target.innerHTML === \"Develop\") {\n        number = 1;\n      } else if (event.target.innerHTML === \"QA\") {\n        number = 2;\n      } else if (event.target.innerHTML === \"Ready\") {\n        number = 3;\n      }\n\n      this.setState({\n        taskStatus: number\n      });\n    };\n\n    this.state = {\n      taskId: props.taskId,\n      taskStatus: 0\n    };\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.onHide,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      id: \"contained-modal-title-vcenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\u0414\\u0430\\u0442\\u0430\"), React.createElement(Form.Control, {\n      onChange: this.changeDateHandler,\n      placeholder: \"\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0434\\u0430\\u0442\\u0443\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"), React.createElement(DropdownButton, {\n      as: InputGroup.Prepend,\n      variant: \"outline-secondary\",\n      title: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\",\n      id: \"input-group-dropdown-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      onClick: this.selectHandler,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"New\"), React.createElement(Dropdown.Item, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Develop\"), React.createElement(Dropdown.Item, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"QA\"), React.createElement(Dropdown.Item, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Ready\"))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.props.onSave(this.props.taskId),\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C\"), React.createElement(Button, {\n      onClick: this.props.onHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  taskStatus: state.taskStatus\n});\n\nexport default connect(mapStateToProps, null)(ChangeTaskStatusModal);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/ChangeTaskStatusModal/ChangeTaskStatusModal.js"],"names":["React","Component","Modal","Button","Form","connect","DropdownButton","Dropdown","InputGroup","ChangeTaskStatusModal","constructor","props","selectHandler","event","console","log","target","innerHTML","number","setState","taskStatus","state","taskId","render","show","onHide","changeDateHandler","Prepend","onSave","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { connect } from 'react-redux';\r\nimport { DropdownButton, Dropdown, InputGroup } from 'react-bootstrap';\r\n\r\n\r\nclass ChangeTaskStatusModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskId: props.taskId,\r\n            taskStatus: 0\r\n        };\r\n    }\r\n\r\n    selectHandler = (event) => {\r\n        console.log(event.target.innerHTML);\r\n        let number =0;\r\n        if (event.target.innerHTML === \"New\") {\r\n            number = 0;\r\n        } else if (event.target.innerHTML === \"Develop\") {\r\n            number = 1;\r\n        } else if (event.target.innerHTML === \"QA\") {\r\n            number = 2;\r\n        } else if (event.target.innerHTML === \"Ready\") {\r\n            number = 3;\r\n        }\r\n\r\n        this.setState({taskStatus: number});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.onHide}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Изменить статус задачи\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group controlId=\"date\">\r\n                            <Form.Label>Дата</Form.Label>\r\n                            <Form.Control onChange={this.changeDateHandler} placeholder=\"Укажите дату\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"date\">\r\n                            <Form.Label>Статус</Form.Label>\r\n                            <DropdownButton\r\n                                as={InputGroup.Prepend}\r\n                                variant=\"outline-secondary\"\r\n                                title=\"Статус\"\r\n                                id=\"input-group-dropdown-1\"\r\n                            >\r\n                                <Dropdown.Item onClick={this.selectHandler} href=\"#\">New</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Develop</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">QA</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Ready</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        onClick={() => this.props.onSave(this.props.taskId)}\r\n                        variant=\"primary\"\r\n                        type=\"submit\">\r\n                        Выполнить\r\n                    </Button>\r\n                    <Button onClick={this.props.onHide}>Закрыть</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    taskStatus: state.taskStatus\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ChangeTaskStatusModal);"]},"metadata":{},"sourceType":"module"}