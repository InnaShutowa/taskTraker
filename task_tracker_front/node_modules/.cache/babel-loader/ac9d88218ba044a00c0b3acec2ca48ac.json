{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Task\\\\Task.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport * as css from \"./TaskStyles.css\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport DeleteConfirmModal from '../DeleteConfirmModal';\nimport CreateTimesheetModal from '../CreateTimesheetModal';\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getUserInfoHandler(\"\");\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.setShowTimesheet = value => {\n      this.setState({\n        isShowTimesheet: value\n      });\n    };\n\n    this.getUserInfoHandler = apikey => {\n      axios.get('http://localhost:57392/singleTask?apikey=qwerty&task_id=' + this.state.taskId).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            task: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.deleteTaskHandler = taskId => {\n      axios.post('http://localhost:57392/taskJobs', {\n        apikey: \"qwerty\",\n        task_id: taskId\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/tasks\");\n        }\n      });\n    };\n\n    this.createTimesheetHandler = () => {\n      axios.post('http://localhost:57392/taskJobs', {\n        apikey: \"qwerty\",\n        task_id: this.state.taskId\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/tasks\");\n        }\n      });\n    };\n\n    this.state = {\n      task: {},\n      taskId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1)),\n      isRequested: false,\n      isShow: false,\n      isShowTimesheet: false\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0435: \"), React.createElement(Button, {\n        onClick: () => this.setShow(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"), React.createElement(Button, {\n        onClick: () => this.setShow(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442\")), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.task.task_name))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.task.task_description))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442a \\u043F\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.task.date_deadline && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.task.date_create)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0434\\u0435\\u0434\\u043B\\u0430\\u0439\\u043D\\u0430\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.task.date_deadline && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.task.date_deadline)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u044F\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.task.date_finished && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, new Date(this.state.task.date_finished))))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/userPage/\" + this.state.task.user_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.task.user_full_name)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/userPage/\" + this.state.task.creater_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.task.creater_full_name)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"), React.createElement(Col, {\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.state.task.task_status_text)), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => this.setShow(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\"))))), React.createElement(DeleteConfirmModal, {\n        show: this.state.isShow,\n        projectId: this.state.taskId,\n        onHide: () => this.setShow(false),\n        onSave: taskId => this.deleteTaskHandler(taskId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(CreateTimesheetModal, {\n        show: this.state.isShowTimesheet,\n        taskId: this.state.taskId,\n        onHide: () => this.setShowTimesheet(false),\n        onSave: taskId => this.deleteTaskHandler(taskId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  task: state.Task,\n  taskId: 0,\n  isShow: false,\n  isShowTimesheet: false\n});\n\nexport default connect(mapStateToProps, null)(Task);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Task/Task.js"],"names":["React","Component","Form","Row","Col","Button","css","connect","axios","Moment","DeleteConfirmModal","CreateTimesheetModal","Task","constructor","props","componentDidMount","getUserInfoHandler","setShow","value","setState","isShow","setShowTimesheet","isShowTimesheet","apikey","get","state","taskId","then","response","console","log","data","error","alert","task","isRequested","deleteTaskHandler","post","task_id","history","push","createTimesheetHandler","Number","parseInt","location","pathname","substring","lastIndexOf","render","task_name","task_description","date_deadline","date_create","date_finished","Date","user_id","user_full_name","creater_id","creater_full_name","task_status_text","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport * as css from \"./TaskStyles.css\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport DeleteConfirmModal from '../DeleteConfirmModal';\r\nimport CreateTimesheetModal from '../CreateTimesheetModal';\r\n\r\n\r\nclass Task extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: {\r\n            },\r\n            taskId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1)),\r\n            isRequested: false,\r\n            isShow: false,\r\n            isShowTimesheet: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUserInfoHandler(\"\");\r\n    };\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n    setShowTimesheet = (value) => {\r\n        this.setState({ isShowTimesheet: value });\r\n    }\r\n\r\n    getUserInfoHandler = (apikey) => {\r\n        axios.get('http://localhost:57392/singleTask?apikey=qwerty&task_id=' + this.state.taskId)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setState({ task: response.data.data, isRequested: true });\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteTaskHandler = (taskId) => {\r\n        axios.post('http://localhost:57392/taskJobs',\r\n            {\r\n                apikey: \"qwerty\",\r\n                task_id: taskId\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.props.history.push(`/tasks`);\r\n                }\r\n            });\r\n    }\r\n\r\n    createTimesheetHandler = () => {\r\n        axios.post('http://localhost:57392/taskJobs',\r\n            {\r\n                apikey: \"qwerty\",\r\n                task_id: this.state.taskId\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.props.history.push(`/tasks`);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main\">\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Информация о задаче: </div>\r\n                    <Button onClick={() => this.setShow(true)} className=\"button_padding\" variant=\"outline-primary\">\r\n                        Удалить задачу\r\n                    </Button>\r\n                    <Button onClick={() => this.setShow(true)} className=\"button_padding\" variant=\"outline-primary\">\r\n                        Добавить отчет\r\n                    </Button>\r\n                </div>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Название\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_name\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Описание\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_description\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Датa постановки\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_deadline && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            this.state.task.date_create\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Дата дедлайна\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_deadline && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            this.state.task.date_deadline\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Дата завершения\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_finished && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(this.state.task.date_finished)\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Исполнитель\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                <a href={\"/userPage/\"+this.state.task.user_id}>\r\n                                    {\r\n                                        this.state.task.user_full_name\r\n                                    }\r\n                                </a>\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Создатель задачи\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                <a href={\"/userPage/\"+this.state.task.creater_id}>\r\n                                    {\r\n                                        this.state.task.creater_full_name\r\n                                    }\r\n                                </a>\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Статус\r\n                        </Form.Label>\r\n                        <Col sm={2}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_status_text\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <Form.Label column sm={12}>\r\n                                <Button onClick={() => this.setShow(true)} className=\"button_padding\" variant=\"outline-primary\">\r\n                                    Изменить статус\r\n                                </Button>\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <DeleteConfirmModal show={this.state.isShow}\r\n                    projectId={this.state.taskId}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(taskId) => this.deleteTaskHandler(taskId)}\r\n                />\r\n\r\n                <CreateTimesheetModal show={this.state.isShowTimesheet}\r\n                    taskId={this.state.taskId}\r\n                    onHide={() => this.setShowTimesheet(false)}\r\n                    onSave={(taskId) => this.deleteTaskHandler(taskId)}\r\n                />\r\n\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    task: state.Task,\r\n    taskId: 0,\r\n    isShow: false,\r\n    isShowTimesheet: false\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Task);"]},"metadata":{},"sourceType":"module"}