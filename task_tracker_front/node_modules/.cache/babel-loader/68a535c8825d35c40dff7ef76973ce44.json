{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Project\\\\Project.jsx\";\nimport React, { useState, Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport DeleteConfirmModal from '../DeleteConfirmModal';\nimport * as css from \"./StylesProject.css\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport projectsActions from '../../store/Actions';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport { replaceState, withRouter, pushState } from 'react-router';\nimport { BrowserRouter, Route } from 'react-router-dom';\nconst proj = {\n  id: 1,\n  title: \"Yee\",\n  description: \"!!!!\",\n  dateCreate: \"12.01.2019\",\n  countUsers: 10,\n  creator: \"Барабашка\",\n  users: [{\n    id: 1,\n    firstName: \"Inna\",\n    lastName: \"Shutova\",\n    countActiveTasks: 19,\n    email: \"i.schutova@nordclan.com\"\n  }, {\n    id: 2,\n    firstName: \"Natalia\",\n    lastName: \"Myasnikova\",\n    countActiveTasks: 19,\n    email: \"i.schutova@nordclan.com\"\n  }]\n};\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getProjectHandler(\"\", this.state.projectId);\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.getProjectHandler = (apikey, projectId) => {\n      axios.get('http://localhost:57392/projectInfo?apikey=qwerty&project_id=' + projectId).then(response => {\n        console.log(response);\n        this.setState({\n          project: response.data.data,\n          isRequested: true\n        });\n      });\n    };\n\n    this.addUserInProjectHandler = apikey => {};\n\n    this.deleteProjectHandler = projectId => {\n      axios.post('http://localhost:57392/projectInfo', {\n        apikey: \"qwerty\",\n        project_id: projectId\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/projects\"); // window.history.replaceState(\"http://localhost:3000/projects\", \"Sample Title\", \"http://localhost:3000/projects\");\n          // this.getProjectsListHandler(\"\");\n        } // this.setState({project: response.data.data, isRequested: true});\n\n      });\n    };\n\n    this.getProjectsListHandler = apikey => {\n      axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\n        this.setState({\n          projects: response.data.data,\n          isRequested: true\n        });\n      });\n    };\n\n    console.log(props);\n    console.log(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1));\n    this.state = {\n      project: {},\n      isShow: false,\n      isRequested: false,\n      projectId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1))\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      if (!this.state.project) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430...\");\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" \", this.state.project.project_name, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text_author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"\\u0410\\u0432\\u0442\\u043E\\u0440: \", this.state.project.creater_first_name + \" \" + this.state.project.creater_last_name)), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0443\"), React.createElement(Button, {\n        onClick: () => this.setShow(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\")), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.project.description), this.state.project.users_list.length !== 0 && React.createElement(\"div\", {\n        className: \"users_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\")), this.state.project.users_list.map(user => {\n        return React.createElement(ListGroup.Item, {\n          className: \"inline_block_elements\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"inline_block_users\",\n          href: \"/user/\" + user.user_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, user.full_name), React.createElement(\"div\", {\n          className: \"inline_block_users\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, user.email));\n      })), React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043F\\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0443\"), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: [],\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"taskId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Id \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"taskDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Id \\u0438\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044F\"), React.createElement(TableHeaderColumn, {\n        dataField: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"), React.createElement(TableHeaderColumn, {\n        dataField: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"))), React.createElement(DeleteConfirmModal, {\n        show: this.state.isShow,\n        projectId: this.state.projectId,\n        onHide: () => this.setShow(false),\n        onSave: projectId => this.deleteProjectHandler(projectId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  project: state.Project,\n  isShow: false,\n  isRequested: state.Projects ? state.Projects.IsRequested : false,\n  projectId: 0\n});\n\nexport default connect(mapStateToProps, null)(Project);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Project/Project.jsx"],"names":["React","useState","Component","ListGroup","Button","DeleteConfirmModal","css","BootstrapTable","TableHeaderColumn","projectsActions","axios","connect","replaceState","withRouter","pushState","BrowserRouter","Route","proj","id","title","description","dateCreate","countUsers","creator","users","firstName","lastName","countActiveTasks","email","Project","constructor","props","componentDidMount","getProjectHandler","state","projectId","setShow","value","setState","isShow","apikey","get","then","response","console","log","project","data","isRequested","addUserInProjectHandler","deleteProjectHandler","post","project_id","error","alert","history","push","getProjectsListHandler","projects","location","pathname","substring","lastIndexOf","Number","parseInt","render","project_name","creater_first_name","creater_last_name","users_list","length","map","user","user_id","full_name","mapStateToProps","Projects","IsRequested"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DeleteConfirmModal from '../DeleteConfirmModal';\r\nimport * as css from \"./StylesProject.css\";\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\nimport projectsActions from '../../store/Actions'\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport { replaceState, withRouter, pushState } from 'react-router';\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\nconst proj = {\r\n    id: 1,\r\n    title: \"Yee\",\r\n    description: \"!!!!\",\r\n    dateCreate: \"12.01.2019\",\r\n    countUsers: 10,\r\n    creator: \"Барабашка\",\r\n    users: [\r\n        {\r\n            id: 1,\r\n            firstName: \"Inna\",\r\n            lastName: \"Shutova\",\r\n            countActiveTasks: 19,\r\n            email: \"i.schutova@nordclan.com\"\r\n        },\r\n        {\r\n            id: 2,\r\n            firstName: \"Natalia\",\r\n            lastName: \"Myasnikova\",\r\n            countActiveTasks: 19,\r\n            email: \"i.schutova@nordclan.com\"\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\nclass Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props);\r\n        console.log(props.location.pathname.substring(props.location.pathname.lastIndexOf('/')+1));\r\n        this.state = {\r\n            project: {},\r\n            isShow: false,\r\n            isRequested: false,\r\n            projectId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/')+1))\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProjectHandler(\"\", this.state.projectId);\r\n    };\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n    getProjectHandler = (apikey, projectId) => {\r\n        axios.get('http://localhost:57392/projectInfo?apikey=qwerty&project_id='+projectId)\r\n        .then(response => {\r\n            console.log(response);\r\n            this.setState({project: response.data.data, isRequested: true});\r\n        });\r\n    }\r\n\r\n    addUserInProjectHandler = (apikey) => {\r\n\r\n    }\r\n    deleteProjectHandler = (projectId) => {\r\n        axios.post('http://localhost:57392/projectInfo',\r\n        {\r\n            apikey: \"qwerty\",\r\n            project_id: projectId\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setShow(false);\r\n                this.props.history.push(`/projects`);\r\n               // window.history.replaceState(\"http://localhost:3000/projects\", \"Sample Title\", \"http://localhost:3000/projects\");\r\n               // this.getProjectsListHandler(\"\");\r\n            }\r\n           // this.setState({project: response.data.data, isRequested: true});\r\n        });\r\n    }\r\n\r\n    getProjectsListHandler = (apikey) =>{\r\n        axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\r\n            this.setState({projects: response.data.data, isRequested: true});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isRequested ) {\r\n            if (!this.state.project) return <div>Страница не найдена...</div>;\r\n\r\n            console.log(this.state);\r\n            return <div className=\"main_fon\">\r\n            <div className=\"inline_block\">\r\n                <div className=\"title_block\">\r\n                    <div className=\"text_title\"> {this.state.project.project_name} </div>\r\n                    <br />\r\n                    <div className=\"text_author\">\r\n                        Автор: {this.state.project.creater_first_name + \" \" + \r\n                        this.state.project.creater_last_name}\r\n                    </div>\r\n                </div>\r\n    \r\n                <Button className=\"button_padding\" variant=\"outline-primary\">Выгрузить статистику</Button>\r\n                <Button onClick={()=>this.setShow(true)} className=\"button_padding\" variant=\"outline-primary\">Удалить проект</Button>\r\n            </div>\r\n            <div className=\"text_description\">\r\n                {this.state.project.description}\r\n            </div>\r\n    \r\n            {\r\n                this.state.project.users_list.length !== 0 && <div className=\"users_list\">\r\n                    <div className=\"inline_block_users_title\">\r\n                        <div className=\"title_block\">Список пользователей</div>\r\n                        <Button className=\"button_padding\" variant=\"outline-primary\">Добавить пользователя</Button>\r\n                    </div>\r\n                    {\r\n                       this.state.project.users_list.map(user => {\r\n                            return <ListGroup.Item className=\"inline_block_elements\">\r\n                                <a className=\"inline_block_users\" href={\"/user/\"+user.user_id}>\r\n                                    {user.full_name}\r\n                                </a>\r\n                                <div className=\"inline_block_users\">{user.email}</div>\r\n                            </ListGroup.Item>;\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n    \r\n            <div className=\"inline_block_users_title\">Задачи по проекту</div>\r\n            <div className=\"text_description\">\r\n                <BootstrapTable data={[]} striped hover>\r\n                    <TableHeaderColumn isKey dataField='taskId'>Id задачи</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='name'>Название задачи</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='taskDate'>Дата постановки</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='id'>Id исполнителя</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='time'>Затраченное время</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='status'>Статус</TableHeaderColumn>\r\n                </BootstrapTable>\r\n            </div>\r\n            \r\n            <DeleteConfirmModal show={this.state.isShow} \r\n            projectId={this.state.projectId}\r\n            onHide={() => this.setShow(false)} \r\n            onSave={(projectId)=> this.deleteProjectHandler(projectId)}\r\n            />\r\n\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    project: state.Project,\r\n    isShow: false,\r\n    isRequested: state.Projects ? state.Projects.IsRequested : false,\r\n    projectId: 0\r\n});\r\nexport default connect(mapStateToProps, null)(Project);"]},"metadata":{},"sourceType":"module"}