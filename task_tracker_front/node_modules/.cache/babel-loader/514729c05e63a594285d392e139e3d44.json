{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Tasks\\\\Tasks.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport CreateProjectModal from '../CreateProjectModal';\nimport { connect } from 'react-redux';\nimport ActionTypes from '../../store/Actions/index.js';\nimport axios from 'axios';\nimport * as css from \"./StylesTasks.css\";\nimport Moment from 'react-moment';\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getProjectsListHandler(\"\");\n    };\n\n    this.getProjectsListHandler = apikey => {\n      axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\n        this.setState({\n          projects: response.data.data,\n          isRequested: true\n        });\n      });\n    };\n\n    this.createNewProjectHandler = (name, descr) => {\n      axios.post('http://localhost:57392/project', {\n        apikey: 'qwerty',\n        project_name: name,\n        description: descr\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.getProjectsListHandler(\"\");\n        }\n      });\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.state = {\n      projects: [],\n      isShow: false,\n      isRequested: false\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"\\u0412\\u0430\\u0448\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \"), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0443\")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\")), this.state.projects.map(pr => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/project/\" + pr.project_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, pr.project_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, new Date(pr.create_date))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, pr.count_users), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, pr.creater_first_name + ' ' + pr.creater_last_name)))), React.createElement(CreateProjectModal, {\n        show: this.state.isShow,\n        onHide: () => this.setShow(false),\n        onSave: (name, descr) => this.createNewProjectHandler(name, descr),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  projects: state.Projects,\n  isShow: false,\n  isRequested: state.Projects ? state.Projects.IsRequested : false\n});\n\nexport default connect(mapStateToProps, null)(Tasks);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Tasks/Tasks.js"],"names":["React","Component","ListGroup","Button","CreateProjectModal","connect","ActionTypes","axios","css","Moment","Tasks","constructor","props","componentDidMount","getProjectsListHandler","apikey","get","then","response","setState","projects","data","isRequested","createNewProjectHandler","name","descr","post","project_name","description","error","alert","setShow","value","isShow","state","render","map","pr","project_id","Date","create_date","count_users","creater_first_name","creater_last_name","mapStateToProps","Projects","IsRequested"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CreateProjectModal from '../CreateProjectModal';\r\nimport { connect } from 'react-redux';\r\nimport ActionTypes from '../../store/Actions/index.js';\r\nimport axios from 'axios';\r\nimport * as css from \"./StylesTasks.css\";\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass Tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: [],\r\n            isShow: false,\r\n            isRequested: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProjectsListHandler(\"\");\r\n    };\r\n\r\n    getProjectsListHandler = (apikey) =>{\r\n        axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\r\n            this.setState({projects: response.data.data, isRequested: true});\r\n        });\r\n    }\r\n\r\n    createNewProjectHandler = (name, descr) => {\r\n        axios.post('http://localhost:57392/project',\r\n        {\r\n            apikey: 'qwerty',\r\n            project_name: name,\r\n            description: descr\r\n        }).then(response => {\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setShow(false);\r\n                this.getProjectsListHandler(\"\");\r\n            }\r\n        });\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n    \r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main_fon\">\r\n            <div className=\"inline_block\">\r\n                <div className=\"text_title_ag\">Ваши задачи: </div>\r\n                <Button className=\"button_padding\" variant=\"outline-primary\">Выгрузить статистику</Button>\r\n            </div>\r\n\r\n            <ListGroup>\r\n                <ListGroup.Item className=\"inline_block\">\r\n                    <div className=\"inline_element\">Название проекта</div>\r\n                    <div className=\"inline_element\">Дата создания</div>\r\n                    <div className=\"inline_element\">Количество пользователей</div>\r\n                    <div className=\"inline_element\">Создатель</div>\r\n                </ListGroup.Item>\r\n                {\r\n                    this.state.projects.map(pr => (\r\n                        <ListGroup.Item className=\"inline_block\">\r\n                            <a className=\"inline_element\" href={\"/project/\" + pr.project_id}>{pr.project_name}</a>\r\n                            <div className=\"inline_element\">\r\n                                <Moment format=\"DD.MM.YYYY\">\r\n                                    {\r\n                                        new Date(pr.create_date)\r\n                                    }\r\n                                </Moment>\r\n                            </div>\r\n                            <div className=\"inline_element\">{pr.count_users}</div>\r\n                                <div className=\"inline_element\">{pr.creater_first_name + ' ' + pr.creater_last_name}</div>\r\n                        </ListGroup.Item>\r\n                    ))\r\n                }\r\n            </ListGroup>\r\n            <CreateProjectModal show={this.state.isShow} \r\n            onHide={() => this.setShow(false)} \r\n            onSave={(name, descr)=> this.createNewProjectHandler(name, descr)} />\r\n        </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n \r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projects: state.Projects,\r\n    isShow: false,\r\n    isRequested: state.Projects ? state.Projects.IsRequested : false\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n) (Tasks);"]},"metadata":{},"sourceType":"module"}