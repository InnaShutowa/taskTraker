{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Projects\\\\Projects.jsx\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport CreateProjectModal from '../CreateProjectModal';\nimport { connect } from 'react-redux';\nimport ActionTypes from '../../store/Actions/index.js';\nimport axios from 'axios';\nconst proj = [{\n  id: 1,\n  title: \"Yee\",\n  description: \"!!!!\",\n  dateCreate: \"12.01.2019\",\n  countUsers: 10,\n  creator: \"Барабашка\"\n}, {\n  id: 2,\n  title: \"Ye1e\",\n  description: \"!!!!\",\n  dateCreate: \"12.01.2019\",\n  countUsers: 5,\n  creator: \"Джокер\"\n}];\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\n        console.log(response);\n        this.props.projectsSaveData(response.data);\n      });\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.state = {\n      projects: [],\n      isShow: false\n    };\n  }\n\n  render() {\n    //this.props.projectsRequest();\n    console.log(this.props);\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"main_fon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inline_block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text_title_ag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"\\u0412\\u0430\\u0448\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B: \"), React.createElement(Button, {\n      className: \"button_padding\",\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0443\"), React.createElement(Button, {\n      className: \"button_padding\",\n      variant: \"outline-primary\",\n      onClick: () => this.setShow(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\")), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      className: \"inline_block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inline_element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), React.createElement(\"div\", {\n      className: \"inline_element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n      className: \"inline_element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), React.createElement(\"div\", {\n      className: \"inline_element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\")), proj.map(pr => React.createElement(ListGroup.Item, {\n      className: \"inline_block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"inline_element\",\n      href: \"/project/\" + pr.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, pr.title), React.createElement(\"div\", {\n      className: \"inline_element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, pr.dateCreate), React.createElement(\"div\", {\n      className: \"inline_element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, pr.countUsers), React.createElement(\"div\", {\n      className: \"inline_element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, pr.creator)))), React.createElement(CreateProjectModal, {\n      show: this.state.isShow,\n      onHide: () => this.setShow(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  projects: state.Projects,\n  isShow: false\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    projectsRequest: () => {\n      dispatch(ActionTypes.ActionTypes.projectsActions.projectsActions.projectsRequest());\n    },\n    projectsSaveData: action => {\n      dispatch(ActionTypes.ActionTypes.projectsActions.projectsActions.projectsSaveData(action));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Projects);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Projects/Projects.jsx"],"names":["React","Component","ListGroup","Button","CreateProjectModal","connect","ActionTypes","axios","proj","id","title","description","dateCreate","countUsers","creator","Projects","constructor","props","componentDidMount","get","then","response","console","log","projectsSaveData","data","setShow","value","setState","isShow","state","projects","render","map","pr","mapStateToProps","mapDispatchToProps","dispatch","projectsRequest","projectsActions","action"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CreateProjectModal from '../CreateProjectModal';\r\nimport { connect } from 'react-redux';\r\nimport ActionTypes from '../../store/Actions/index.js';\r\nimport axios from 'axios';\r\n\r\nconst proj = [\r\n    {\r\n        id: 1,\r\n        title: \"Yee\",\r\n        description: \"!!!!\",\r\n        dateCreate: \"12.01.2019\",\r\n        countUsers: 10,\r\n        creator: \"Барабашка\"\r\n    }, {\r\n        id: 2,\r\n        title: \"Ye1e\",\r\n        description: \"!!!!\",\r\n        dateCreate: \"12.01.2019\",\r\n        countUsers: 5,\r\n        creator: \"Джокер\"\r\n    }\r\n];\r\n\r\n\r\nclass Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: [],\r\n            isShow: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\r\n            console.log(response);\r\n            this.props.projectsSaveData(response.data);\r\n        });\r\n    };\r\n\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //this.props.projectsRequest();\r\n        console.log(this.props);\r\n        console.log(this.state);\r\n        return <div className=\"main_fon\">\r\n            <div className=\"inline_block\">\r\n                <div className=\"text_title_ag\">Ваши проекты: </div>\r\n                <Button className=\"button_padding\" variant=\"outline-primary\">Выгрузить статистику</Button>\r\n                <Button className=\"button_padding\" variant=\"outline-primary\" onClick={() => this.setShow(true)}>Создать проект</Button>\r\n            </div>\r\n\r\n            <ListGroup>\r\n                <ListGroup.Item className=\"inline_block\">\r\n                    <div className=\"inline_element\">Название проекта</div>\r\n                    <div className=\"inline_element\">Дата создания</div>\r\n                    <div className=\"inline_element\">Количество пользователей</div>\r\n                    <div className=\"inline_element\">Создатель</div>\r\n                </ListGroup.Item>\r\n                {\r\n                    proj.map(pr => (\r\n                        <ListGroup.Item className=\"inline_block\">\r\n                            <a className=\"inline_element\" href={\"/project/\" + pr.id}>{pr.title}</a>\r\n                            <div className=\"inline_element\">{pr.dateCreate}</div>\r\n                            <div className=\"inline_element\">{pr.countUsers}</div>\r\n                            <div className=\"inline_element\">{pr.creator}</div>\r\n                        </ListGroup.Item>\r\n                    ))\r\n                }\r\n            </ListGroup>\r\n            <CreateProjectModal show={this.state.isShow} onHide={() => this.setShow(false)} />\r\n        </div>;\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projects: state.Projects,\r\n    isShow: false\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        projectsRequest: () => {\r\n            dispatch(ActionTypes.ActionTypes.projectsActions.projectsActions.projectsRequest());\r\n        },\r\n        projectsSaveData: (action) => {\r\n            dispatch(ActionTypes.ActionTypes.projectsActions.projectsActions.projectsSaveData(action));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Projects);"]},"metadata":{},"sourceType":"module"}