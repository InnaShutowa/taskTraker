{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Project\\\\Project.jsx\";\nimport React, { useState, Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport DeleteConfirmModal from '../DeleteConfirmModal';\nimport AddUserInProjectModal from '../AddUserInProjectModal';\nimport CreateTaskModal from '../CreateTaskModal';\nimport * as css from \"./StylesProject.css\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport projectsActions from '../../store/Actions';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport { replaceState, withRouter, pushState } from 'react-router';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getProjectHandler(\"\", this.state.projectId);\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.setShowAgain = value => {\n      this.setState({\n        isShowAgain: value\n      });\n    };\n\n    this.setShowAddUser = value => {\n      this.setState({\n        isShowAddUser: value\n      });\n      this.getUsersListHandler();\n    };\n\n    this.getUsersListHandler = () => {\n      axios.get('http://localhost:57392/userToProject?apikey=' + this.props.user.apikey + '&project_id=' + this.state.projectId).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n          this.setShowAddUser(false);\n        } else {\n          this.setState({\n            usersToAdd: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.getProjectHandler = (apikey, projectId) => {\n      axios.get('http://localhost:57392/projectInfo?apikey=' + this.props.user.apikey + '&project_id=' + projectId).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            project: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.addUserInProjectHandler = (apikey, userId) => {\n      axios.post('http://localhost:57392/admin', {\n        apikey: this.props.user.apikey,\n        project_id: this.state.projectId,\n        user_id: userId\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/projects\");\n        }\n      });\n    };\n\n    this.deleteProjectHandler = projectId => {\n      axios.post('http://localhost:57392/projectInfo', {\n        apikey: this.props.user.apikey,\n        project_id: projectId\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/projects\");\n        }\n      });\n    };\n\n    this.getProjectsListHandler = apikey => {\n      axios.get('http://localhost:57392/project?apikey=' + this.props.user.apikey).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            projects: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.createTaskHandler = data => {\n      axios.post('http://localhost:57392/task', {\n        apikey: this.props.user.apikey,\n        project_id: this.state.projectId,\n        email: data.email,\n        title: data.title,\n        description: data.description,\n        deadline_date: data.deadline_date\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShowAgain(false);\n          this.getProjectHandler(\"\", this.state.projectId);\n        }\n      });\n    };\n\n    this.CellFormatter = (cell, row) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/task/\" + cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, cell));\n    };\n\n    this.CellUserFormatter = (cell, row) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/userPage/\" + row.user_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, cell));\n    };\n\n    this.state = {\n      usersToAdd: [],\n      project: {},\n      isShowAgain: false,\n      isShow: false,\n      isRequested: false,\n      isShowAddUser: false,\n      projectId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1))\n    };\n  }\n\n  render() {\n    console.log(this.props);\n\n    if (this.state.isRequested) {\n      if (!this.state.project) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430...\");\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \" \", this.state.project.project_name, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text_author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"\\u0410\\u0432\\u0442\\u043E\\u0440: \", this.state.project.creater_first_name + \" \" + this.state.project.creater_last_name)), this.props.user.is_admin && React.createElement(Button, {\n        onClick: () => this.setShow(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\")), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.state.project.description), React.createElement(\"div\", {\n        className: \"users_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), React.createElement(Button, {\n        onClick: () => this.setShowAddUser(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\")), this.state.project.users_list.length !== 0 && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.project.users_list.map(user => {\n        return React.createElement(ListGroup.Item, {\n          className: \"inline_block_elements\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"inline_block_users\",\n          href: \"/userPage/\" + user.user_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, user.full_name), React.createElement(\"div\", {\n          className: \"inline_block_users\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, user.email));\n      }))), React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043F\\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0443\"), React.createElement(Button, {\n        onClick: () => this.setShowAgain(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\")), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.project.tasks_list,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"task_id\",\n        dataFormat: this.CellFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Id \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"task_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"date_create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"user_full_name\",\n        dataFormat: this.CellUserFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\"), React.createElement(TableHeaderColumn, {\n        dataField: \"hours_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"), React.createElement(TableHeaderColumn, {\n        dataField: \"task_status_text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"))), React.createElement(DeleteConfirmModal, {\n        show: this.state.isShow,\n        projectId: this.state.projectId,\n        onHide: () => this.setShow(false),\n        onSave: projectId => this.deleteProjectHandler(projectId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(AddUserInProjectModal, {\n        show: this.state.isShowAddUser,\n        projectId: this.state.projectId,\n        onHide: () => this.setShowAddUser(false),\n        onSave: (apikey, userId) => this.addUserInProjectHandler(apikey, userId),\n        usersToAdd: this.state.usersToAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(CreateTaskModal, {\n        show: this.state.isShowAgain,\n        onHide: () => this.setShowAgain(false),\n        onSave: data => this.createTaskHandler(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.UserReduser,\n  project: state.Project,\n  isShow: false,\n  isShowAddUser: false,\n  isRequested: state.Projects ? state.Projects.IsRequested : false,\n  projectId: 0,\n  usersToAdd: [],\n  isShowAgain: false\n});\n\nexport default connect(mapStateToProps, null)(Project);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Project/Project.jsx"],"names":["React","useState","Component","ListGroup","Button","DeleteConfirmModal","AddUserInProjectModal","CreateTaskModal","css","BootstrapTable","TableHeaderColumn","projectsActions","axios","connect","replaceState","withRouter","pushState","BrowserRouter","Route","Project","constructor","props","componentDidMount","getProjectHandler","state","projectId","setShow","value","setState","isShow","setShowAgain","isShowAgain","setShowAddUser","isShowAddUser","getUsersListHandler","get","user","apikey","then","response","data","error","alert","usersToAdd","isRequested","project","addUserInProjectHandler","userId","post","project_id","user_id","history","push","deleteProjectHandler","getProjectsListHandler","projects","createTaskHandler","email","title","description","deadline_date","CellFormatter","cell","row","CellUserFormatter","Number","parseInt","location","pathname","substring","lastIndexOf","render","console","log","project_name","creater_first_name","creater_last_name","is_admin","users_list","length","map","full_name","tasks_list","mapStateToProps","UserReduser","Projects","IsRequested"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DeleteConfirmModal from '../DeleteConfirmModal';\r\nimport AddUserInProjectModal from '../AddUserInProjectModal';\r\nimport CreateTaskModal from '../CreateTaskModal';\r\nimport * as css from \"./StylesProject.css\";\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\nimport projectsActions from '../../store/Actions';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport { replaceState, withRouter, pushState } from 'react-router';\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\nclass Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usersToAdd: [],\r\n            project: {},\r\n            isShowAgain: false,\r\n            isShow: false,\r\n            isRequested: false,\r\n            isShowAddUser: false,\r\n            projectId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1))\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProjectHandler(\"\", this.state.projectId);\r\n    };\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n    setShowAgain = (value) => {\r\n        this.setState({ isShowAgain: value });\r\n    }\r\n\r\n    setShowAddUser = (value) => {\r\n        this.setState({ isShowAddUser: value });\r\n        this.getUsersListHandler();\r\n    }\r\n\r\n    getUsersListHandler = () => {\r\n        axios.get('http://localhost:57392/userToProject?apikey='\r\n            + this.props.user.apikey\r\n            + '&project_id=' + this.state.projectId)\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                    this.setShowAddUser(false);\r\n                } else {\r\n                    this.setState({ usersToAdd: response.data.data, isRequested: true });\r\n                }\r\n            });\r\n    }\r\n\r\n    getProjectHandler = (apikey, projectId) => {\r\n        axios.get('http://localhost:57392/projectInfo?apikey='\r\n            + this.props.user.apikey\r\n            + '&project_id=' + projectId)\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setState({ project: response.data.data, isRequested: true });\r\n                }\r\n            });\r\n    }\r\n\r\n    addUserInProjectHandler = (apikey, userId) => {\r\n\r\n        axios.post('http://localhost:57392/admin',\r\n            {\r\n                apikey: this.props.user.apikey,\r\n                project_id: this.state.projectId,\r\n                user_id: userId\r\n            })\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.props.history.push(`/projects`);\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteProjectHandler = (projectId) => {\r\n        axios.post('http://localhost:57392/projectInfo',\r\n            {\r\n                apikey: this.props.user.apikey,\r\n                project_id: projectId\r\n            })\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.props.history.push(`/projects`);\r\n                }\r\n            });\r\n    }\r\n\r\n    getProjectsListHandler = (apikey) => {\r\n        axios.get('http://localhost:57392/project?apikey=' + this.props.user.apikey).then(response => {\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setState({ projects: response.data.data, isRequested: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    createTaskHandler = (data) => {\r\n        axios.post('http://localhost:57392/task',\r\n            {\r\n                apikey: this.props.user.apikey,\r\n                project_id: this.state.projectId,\r\n                email: data.email,\r\n                title: data.title,\r\n                description: data.description,\r\n                deadline_date: data.deadline_date\r\n            })\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShowAgain(false);\r\n                    this.getProjectHandler(\"\", this.state.projectId);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    CellFormatter = (cell, row) => {\r\n        return (<div><a href={\"/task/\" + cell}>{cell}</a></div>);\r\n    }\r\n\r\n    CellUserFormatter = (cell, row) => {\r\n        return (<div><a href={\"/userPage/\" + row.user_id}>{cell}</a></div>);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        if (this.state.isRequested) {\r\n            if (!this.state.project) return <div>Страница не найдена...</div>;\r\n\r\n            return <div className=\"main_fon\">\r\n                <div className=\"inline_block\">\r\n                    <div className=\"title_block\">\r\n                        <div className=\"text_title\"> {this.state.project.project_name} </div>\r\n                        <br />\r\n                        <div className=\"text_author\">\r\n                            Автор: {this.state.project.creater_first_name + \" \" +\r\n                                this.state.project.creater_last_name}\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.props.user.is_admin &&\r\n                        <Button onClick={() => this.setShow(true)} className=\"button_padding\" variant=\"outline-primary\">Удалить проект</Button>\r\n                    }\r\n                </div>\r\n                <div className=\"text_description\">\r\n                    {this.state.project.description}\r\n                </div>\r\n\r\n                <div className=\"users_list\">\r\n                    <div className=\"inline_block_users_title\">\r\n                        <div className=\"title_block\">Список пользователей</div>\r\n                        <Button onClick={() => this.setShowAddUser(true)} className=\"button_padding\" variant=\"outline-primary\">Добавить пользователя</Button>\r\n                    </div>\r\n                    {\r\n                        this.state.project.users_list.length !== 0 &&\r\n                        <div>\r\n                            {\r\n                                this.state.project.users_list.map(user => {\r\n                                    return <ListGroup.Item className=\"inline_block_elements\">\r\n                                        <a className=\"inline_block_users\" href={\"/userPage/\" + user.user_id}>\r\n                                            {user.full_name}\r\n                                        </a>\r\n                                        <div className=\"inline_block_users\">{user.email}</div>\r\n                                    </ListGroup.Item>;\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n\r\n                <div className=\"inline_block_users_title\">\r\n                    <div className=\"title_block\">\r\n                        Задачи по проекту\r\n                </div>\r\n                    <Button onClick={() => this.setShowAgain(true)}\r\n                        className=\"button_padding\"\r\n                        variant=\"outline-primary\">\r\n                        Добавить задачу\r\n                </Button>\r\n\r\n                </div>\r\n                <div className=\"text_description\">\r\n\r\n                    <BootstrapTable data={this.state.project.tasks_list} striped hover>\r\n                        <TableHeaderColumn isKey dataField='task_id' dataFormat={this.CellFormatter}>Id задачи</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='task_name'>Название задачи</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='date_create'>Дата постановки</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='user_full_name' dataFormat={this.CellUserFormatter}>Исполнитель</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='hours_count'>Затраченное время</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='task_status_text'>Статус</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n\r\n                <DeleteConfirmModal show={this.state.isShow}\r\n                    projectId={this.state.projectId}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(projectId) => this.deleteProjectHandler(projectId)}\r\n                />\r\n\r\n                <AddUserInProjectModal show={this.state.isShowAddUser}\r\n                    projectId={this.state.projectId}\r\n                    onHide={() => this.setShowAddUser(false)}\r\n                    onSave={(apikey, userId) => this.addUserInProjectHandler(apikey, userId)}\r\n                    usersToAdd={this.state.usersToAdd}\r\n                />\r\n\r\n                <CreateTaskModal show={this.state.isShowAgain}\r\n                    onHide={() => this.setShowAgain(false)}\r\n                    onSave={(data) => this.createTaskHandler(data)} />\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.UserReduser,\r\n    project: state.Project,\r\n    isShow: false,\r\n    isShowAddUser: false,\r\n    isRequested: state.Projects ? state.Projects.IsRequested : false,\r\n    projectId: 0,\r\n    usersToAdd: [],\r\n    isShowAgain: false\r\n});\r\nexport default connect(mapStateToProps, null)(Project);"]},"metadata":{},"sourceType":"module"}