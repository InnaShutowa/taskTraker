{"ast":null,"code":"import _defineProperty from \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Users\\\\Users.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport * as css from \"./Styles.css\";\nimport CreateUserModal from '../CreateUserModal';\nimport { connect } from 'react-redux';\nimport ActionTypes from '../../store/Actions/index.js';\nimport axios from 'axios';\nconst users = [{\n  id: 1,\n  firstName: \"Inna\",\n  lastName: \"Shutova\",\n  dateRegistration: \"12.12.12\",\n  countActiveTasks: 19,\n  email: \"i.schutova@nordclan.com\"\n}, {\n  id: 2,\n  firstName: \"Natalia\",\n  lastName: \"Myasnikova\",\n  dateRegistration: \"12.12.12\",\n  countActiveTasks: 19,\n  email: \"natali@nordclan.com\"\n}];\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getUsersListHandler(\"\");\n    };\n\n    this.createUserHandler = data => {\n      axios.post('http://localhost:57392/user', _objectSpread({}, data, {\n        apikey: 'qwerty'\n      })).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          alert(\"Внимание! Сохраните пароль для авторизации пользователя: \" + response.data.data);\n        }\n\n        this.setShow(false);\n        this.getUsersListHandler(\"\");\n      });\n    };\n\n    this.getUsersListHandler = apikey => {\n      axios.get('http://localhost:57392/user?apikey=qwerty').then(response => {\n        this.setState({\n          users: response.data.data,\n          isRequested: true\n        });\n      });\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.state = {\n      users: [],\n      isShow: false,\n      isRequested: false\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_common\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438: \"), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0443\")), React.createElement(Button, {\n        className: \"button_padding_1\",\n        variant: \"outline-primary\",\n        onClick: () => this.setShow(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        href: \"/proj\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\u0418\\u043C\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element_email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"email\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043D\\u0435\\u0437\\u0430\\u043A\\u0440\\u044B\\u0442\\u044B\\u0445 \\u0437\\u0430\\u0434\\u0430\\u0447\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0437\\u0430\\u043A\\u0440\\u044B\\u0442\\u044B\\u0445 \\u0437\\u0430\\u0434\\u0430\\u0447\")), this.state.users.map(usr => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/userPage/\" + usr.user_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, usr.full_name), React.createElement(\"div\", {\n        className: \"inline_element_email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, usr.email), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, usr.count_open_tasks), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, usr.count_closed_tasks)))), React.createElement(CreateUserModal, {\n        show: this.state.isShow,\n        onHide: () => this.setShow(false),\n        onSave: data => this.createUserHandler(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.Users,\n  isShow: false,\n  isRequested: state.Users ? state.Users.IsRequested : false\n});\n\nexport default connect(mapStateToProps, null)(Users);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Users/Users.jsx"],"names":["React","Component","ListGroup","Button","css","CreateUserModal","connect","ActionTypes","axios","users","id","firstName","lastName","dateRegistration","countActiveTasks","email","Users","constructor","props","componentDidMount","getUsersListHandler","createUserHandler","data","post","apikey","then","response","error","alert","setShow","get","setState","isRequested","value","isShow","state","render","map","usr","user_id","full_name","count_open_tasks","count_closed_tasks","mapStateToProps","user","IsRequested"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,SAAS,EAAC,MAFd;AAGIC,EAAAA,QAAQ,EAAC,SAHb;AAIIC,EAAAA,gBAAgB,EAAC,UAJrB;AAKIC,EAAAA,gBAAgB,EAAC,EALrB;AAMIC,EAAAA,KAAK,EAAE;AANX,CADU,EASV;AACIL,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,SAAS,EAAC,SAFd;AAGIC,EAAAA,QAAQ,EAAC,YAHb;AAIIC,EAAAA,gBAAgB,EAAC,UAJrB;AAKIC,EAAAA,gBAAgB,EAAC,EALrB;AAMIC,EAAAA,KAAK,EAAE;AANX,CATU,CAAd;;AAmBA,MAAMC,KAAN,SAAoBf,SAApB,CAA+B;AAE3BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,MAAM;AACtB,WAAKC,mBAAL,CAAyB,EAAzB;AACH,KAXkB;;AAAA,SAanBC,iBAbmB,GAaEC,IAAD,IAAU;AAC1Bd,MAAAA,KAAK,CAACe,IAAN,CAAW,6BAAX,oBAEOD,IAFP;AAGIE,QAAAA,MAAM,EAAE;AAHZ,UAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACJ,IAAT,CAAcK,KAAlB,EAAyB;AACrBC,UAAAA,KAAK,CAACF,QAAQ,CAACJ,IAAT,CAAcK,KAAf,CAAL;AACH,SAFD,MAEO;AACHC,UAAAA,KAAK,CAAC,8DAA8DF,QAAQ,CAACJ,IAAT,CAAcA,IAA7E,CAAL;AACH;;AACD,aAAKO,OAAL,CAAa,KAAb;AACA,aAAKT,mBAAL,CAAyB,EAAzB;AACH,OAZD;AAaH,KA3BkB;;AAAA,SA6BnBA,mBA7BmB,GA6BII,MAAD,IAAW;AAC7BhB,MAAAA,KAAK,CAACsB,GAAN,CAAU,2CAAV,EAAuDL,IAAvD,CAA4DC,QAAQ,IAAI;AACpE,aAAKK,QAAL,CAAc;AAACtB,UAAAA,KAAK,EAAEiB,QAAQ,CAACJ,IAAT,CAAcA,IAAtB;AAA4BU,UAAAA,WAAW,EAAE;AAAzC,SAAd;AAEH,OAHD;AAIH,KAlCkB;;AAAA,SAoCnBH,OApCmB,GAoCRI,KAAD,IAAW;AACjB,WAAKF,QAAL,CAAc;AAAEG,QAAAA,MAAM,EAAED;AAAV,OAAd;AACH,KAtCkB;;AAEf,SAAKE,KAAL,GAAa;AACT1B,MAAAA,KAAK,EAAE,EADE;AAETyB,MAAAA,MAAM,EAAE,KAFC;AAGTF,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKH;;AAiCDI,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKD,KAAL,CAAWH,WAAf,EAA4B;AACxB,aAAO;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACP;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+HAFJ,CADJ,EAKQ,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAC,iBAA7C;AAA+D,QAAA,OAAO,EAAE,MAAI,KAAKH,OAAL,CAAa,IAAb,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIALR,CADO,EAUP,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,SAAS,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,IAAI,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oKAHJ,EAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wJAJJ,CADJ,EAQQ,KAAKM,KAAL,CAAW1B,KAAX,CAAiB4B,GAAjB,CAAqBC,GAAG,IACpB,oBAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,SAAS,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAA8B,QAAA,IAAI,EAAE,eAAaA,GAAG,CAACC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+DD,GAAG,CAACE,SAAnE,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,GAAG,CAACvB,KAA3C,CAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCuB,GAAG,CAACG,gBAArC,CAHJ,EAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCH,GAAG,CAACI,kBAArC,CAJJ,CADJ,CARR,CAVO,EA4BP,oBAAC,eAAD;AACA,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWD,MADjB;AAEA,QAAA,MAAM,EAAE,MAAM,KAAKL,OAAL,CAAa,KAAb,CAFd;AAGA,QAAA,MAAM,EAAGP,IAAD,IAAQ,KAAKD,iBAAL,CAAuBC,IAAvB,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BO,CAAP;AAiCH,KAlCD,MAkCO;AACH,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;AACJ;;AAhF0B;;AAmF/B,MAAMqB,eAAe,GAAIR,KAAD,KAAY;AAChCS,EAAAA,IAAI,EAAET,KAAK,CAACnB,KADoB;AAEhCkB,EAAAA,MAAM,EAAE,KAFwB;AAGhCF,EAAAA,WAAW,EAAEG,KAAK,CAACnB,KAAN,GAAcmB,KAAK,CAACnB,KAAN,CAAY6B,WAA1B,GAAwC;AAHrB,CAAZ,CAAxB;;AAMA,eAAevC,OAAO,CAClBqC,eADkB,EAElB,IAFkB,CAAP,CAGZ3B,KAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button'\r\nimport * as css from \"./Styles.css\";\r\nimport CreateUserModal from '../CreateUserModal';\r\nimport { connect } from 'react-redux';\r\nimport ActionTypes from '../../store/Actions/index.js';\r\nimport axios from 'axios';\r\n\r\n\r\nconst users = [\r\n    {\r\n        id:1,\r\n        firstName:\"Inna\",\r\n        lastName:\"Shutova\",\r\n        dateRegistration:\"12.12.12\",\r\n        countActiveTasks:19,\r\n        email: \"i.schutova@nordclan.com\"\r\n    },\r\n    {\r\n        id: 2,\r\n        firstName:\"Natalia\",\r\n        lastName:\"Myasnikova\",\r\n        dateRegistration:\"12.12.12\",\r\n        countActiveTasks:19,\r\n        email: \"natali@nordclan.com\"\r\n    }\r\n];\r\n\r\nclass Users extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            isShow: false,\r\n            isRequested: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUsersListHandler(\"\");\r\n    };\r\n\r\n    createUserHandler = (data) => {\r\n        axios.post('http://localhost:57392/user',\r\n        {\r\n            ...data,\r\n            apikey: 'qwerty'\r\n        }).then(response => {\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                alert(\"Внимание! Сохраните пароль для авторизации пользователя: \" + response.data.data);\r\n            }\r\n            this.setShow(false);\r\n            this.getUsersListHandler(\"\");\r\n        });\r\n    }\r\n    \r\n    getUsersListHandler = (apikey) =>{\r\n        axios.get('http://localhost:57392/user?apikey=qwerty').then(response => {\r\n            this.setState({users: response.data.data, isRequested: true});\r\n\r\n        });\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main_fon\">\r\n            <div className=\"inline_block_common\">\r\n                <div className=\"inline_block\">\r\n                    <div className=\"text_title\">Пользователи: </div>\r\n                    <Button className=\"button_padding\" variant=\"outline-primary\">Выгрузить статистику</Button>\r\n                </div>\r\n                    <Button className=\"button_padding_1\" variant=\"outline-primary\" onClick={()=>this.setShow(true)}>Добавить пользователя</Button>\r\n            </div>\r\n\r\n            \r\n            <ListGroup>\r\n                <ListGroup.Item className=\"inline_block\">\r\n                    <div className=\"inline_element\" href=\"/proj\">Имя</div>\r\n                    <div className=\"inline_element_email\">email</div>\r\n                    <div className=\"inline_element\">Количество незакрытых задач</div>\r\n                    <div className=\"inline_element\">Количество закрытых задач</div>\r\n                </ListGroup.Item>\r\n                {\r\n                    this.state.users.map(usr => (\r\n                        <ListGroup.Item className=\"inline_block\">\r\n                            <a className=\"inline_element\" href={\"/userPage/\"+usr.user_id}>{usr.full_name}</a>\r\n                            <div className=\"inline_element_email\">{usr.email}</div>\r\n                            <div className=\"inline_element\">{usr.count_open_tasks}</div>\r\n                            <div className=\"inline_element\">{usr.count_closed_tasks}</div>\r\n                        </ListGroup.Item>\r\n                    ))\r\n                }\r\n            </ListGroup>\r\n            <CreateUserModal \r\n            show={this.state.isShow} \r\n            onHide={() => this.setShow(false)} \r\n            onSave={(data)=>this.createUserHandler(data)} />\r\n        </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.Users,\r\n    isShow: false,\r\n    isRequested: state.Users ? state.Users.IsRequested : false\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n) (Users);"]},"metadata":{},"sourceType":"module"}