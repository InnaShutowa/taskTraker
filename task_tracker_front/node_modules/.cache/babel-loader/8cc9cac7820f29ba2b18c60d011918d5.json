{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Tasks\\\\Tasks.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport CreateProjectModal from '../CreateProjectModal';\nimport { connect } from 'react-redux';\nimport ActionTypes from '../../store/Actions/index.js';\nimport axios from 'axios';\nimport * as css from \"./StylesTasks.css\";\nimport Moment from 'react-moment';\nimport Form from 'react-bootstrap/Form';\nimport * as jsPDF from 'jspdf';\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getProjectsListHandler();\n    };\n\n    this.getProjectsListHandler = () => {\n      axios.get('http://localhost:57392/task?apikey=' + this.props.user.apikey).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            tasks: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.createNewProjectHandler = (name, descr) => {\n      axios.post('http://localhost:57392/project', {\n        apikey: this.props.user.apikey,\n        project_name: name,\n        description: descr\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.getProjectsListHandler();\n        }\n      });\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.getFormHandler = () => {\n      axios.post('http://localhost:57392/statistic', {\n        apikey: this.props.userReducer.apikey,\n        user_id: this.state.userId,\n        start: this.state.start,\n        finish: this.state.finish\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          let filename = \"tasks_form.pdf\";\n          var pdf = new jsPDF();\n          pdf.text(10, 10, response.data);\n          pdf.setFont(\"times\");\n          pdf.setFontType(\"bold\");\n          pdf.setFontSize(9);\n          pdf.save(filename);\n        }\n      });\n    };\n\n    this.state = {\n      tasks: {\n        admin_task_list: [],\n        new_tasks: [],\n        dev_tasks: [],\n        qa_tasks: [],\n        ready_tasks: []\n      },\n      isShow: false,\n      isRequested: false\n    };\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"birthday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\\u0430\"), React.createElement(Form.Control, {\n        type: \"date\",\n        onChange: this.setStart,\n        placeholder: \"01.19.1998\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"birthday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\\u0430\"), React.createElement(Form.Control, {\n        type: \"date\",\n        onChange: this.setFinish,\n        placeholder: \"01.19.1998\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        onClick: this.getFormHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u0443\")), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.new_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, task.task_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Development: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.dev_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, task.task_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"QA: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.qa_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, task.task_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, task.task_status_text)))), React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.ready_tasks.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, task.task_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, task.task_status_text)))), this.props.user.is_admin && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0412\\u0430\\u043C\\u0438 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\")), this.state.tasks.admin_task_list.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, task.task_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/userPage/\" + task.creater_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, task.creater_full_name), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, task.task_status_text))))), React.createElement(CreateProjectModal, {\n        show: this.state.isShow,\n        onHide: () => this.setShow(false),\n        onSave: (name, descr) => this.createNewProjectHandler(name, descr),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.UserReduser,\n  tasks: state.Tasks,\n  isShow: false,\n  isRequested: state.Tasks ? state.Tasks.IsRequested : false\n});\n\nexport default connect(mapStateToProps, null)(Tasks);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Tasks/Tasks.js"],"names":["React","Component","ListGroup","Button","CreateProjectModal","connect","ActionTypes","axios","css","Moment","Form","jsPDF","Tasks","constructor","props","componentDidMount","getProjectsListHandler","get","user","apikey","then","response","data","error","alert","setState","tasks","isRequested","createNewProjectHandler","name","descr","post","project_name","description","setShow","value","isShow","getFormHandler","userReducer","user_id","state","userId","start","finish","console","log","filename","pdf","text","setFont","setFontType","setFontSize","save","admin_task_list","new_tasks","dev_tasks","qa_tasks","ready_tasks","render","setStart","setFinish","map","task","task_id","task_name","Date","date_create","hours_count","creater_full_name","task_status_text","is_admin","creater_id","mapStateToProps","UserReduser","IsRequested"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CreateProjectModal from '../CreateProjectModal';\r\nimport { connect } from 'react-redux';\r\nimport ActionTypes from '../../store/Actions/index.js';\r\nimport axios from 'axios';\r\nimport * as css from \"./StylesTasks.css\";\r\nimport Moment from 'react-moment';\r\nimport Form from 'react-bootstrap/Form';\r\nimport * as jsPDF from 'jspdf';\r\n\r\n\r\nclass Tasks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: {\r\n                admin_task_list: [],\r\n                new_tasks: [],\r\n                dev_tasks: [],\r\n                qa_tasks: [],\r\n                ready_tasks: []\r\n            },\r\n            isShow: false,\r\n            isRequested: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProjectsListHandler();\r\n    };\r\n\r\n    getProjectsListHandler = () => {\r\n        axios.get('http://localhost:57392/task?apikey='+this.props.user.apikey).then(response => {\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setState({ tasks: response.data.data, isRequested: true });\r\n            }\r\n        });\r\n    }\r\n\r\n    createNewProjectHandler = (name, descr) => {\r\n        axios.post('http://localhost:57392/project',\r\n            {\r\n                apikey: this.props.user.apikey,\r\n                project_name: name,\r\n                description: descr\r\n            }).then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.getProjectsListHandler();\r\n                }\r\n            });\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n    getFormHandler = () => {\r\n        axios.post('http://localhost:57392/statistic',\r\n            {\r\n                apikey: this.props.userReducer.apikey,\r\n                user_id: this.state.userId,\r\n                start: this.state.start,\r\n                finish: this.state.finish\r\n            }).then(response => {\r\n                console.log(response);\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    let filename = \"tasks_form.pdf\";\r\n\r\n                    var pdf = new jsPDF();\r\n                    pdf.text(10, 10, response.data);\r\n                    pdf.setFont(\"times\");\r\n                    pdf.setFontType(\"bold\");\r\n                    pdf.setFontSize(9);\r\n                    pdf.save(filename);\r\n                }\r\n            });\r\n    }\r\n    render() {\r\n        console.log(this.state);\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main_fon\">\r\n                {\r\n                        <div className=\"inline_block\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"birthday\">\r\n                                    <Form.Label>Начало периода</Form.Label>\r\n                                    <Form.Control type=\"date\" onChange={this.setStart} placeholder=\"01.19.1998\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"birthday\">\r\n                                    <Form.Label>Конец периода</Form.Label>\r\n                                    <Form.Control type=\"date\" onChange={this.setFinish} placeholder=\"01.19.1998\" />\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                            <Button\r\n                                className=\"button_padding\"\r\n                                variant=\"outline-primary\"\r\n                                onClick={this.getFormHandler}>\r\n                                Получить форму\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Новые задачи: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.new_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.task_name}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Development: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.dev_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.task_name}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">QA: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.qa_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.task_name}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Завершенные задачи: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Создатель</div>\r\n                        <div className=\"inline_element\">Статус</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.tasks.ready_tasks.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.task_name}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">{task.creater_full_name}</div>\r\n                                <div className=\"inline_element\">{task.task_status_text}</div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n                {\r\n                        this.props.user.is_admin &&\r\n                        <div>\r\n<div className=\"inline_block_top\">\r\n                        <div className=\"text_title_ag\">Созданные Вами задачи: </div>\r\n                    </div>\r\n                    <ListGroup>\r\n                        <ListGroup.Item className=\"inline_block\">\r\n                            <div className=\"inline_element\">Название</div>\r\n                            <div className=\"inline_element\">Дата создания</div>\r\n                            <div className=\"inline_element\">Количество часов</div>\r\n                            <div className=\"inline_element\">Создатель</div>\r\n                            <div className=\"inline_element\">Статус</div>\r\n                        </ListGroup.Item>\r\n                        {\r\n                            this.state.tasks.admin_task_list.map(task => (\r\n                                <ListGroup.Item className=\"inline_block\">\r\n                                    <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.task_name}</a>\r\n                                    <div className=\"inline_element\">\r\n                                        <Moment format=\"DD.MM.YYYY\">\r\n                                            {\r\n                                                new Date(task.date_create)\r\n                                            }\r\n                                        </Moment>\r\n                                    </div>\r\n                                    <div className=\"inline_element\">{task.hours_count}</div>\r\n                                    <a className=\"inline_element\" href={\"/userPage/\" + task.creater_id}>{task.creater_full_name}</a>\r\n                                    <div className=\"inline_element\">{task.task_status_text}</div>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n                    </ListGroup>\r\n                        </div>\r\n                    \r\n                }\r\n\r\n                <CreateProjectModal show={this.state.isShow}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(name, descr) => this.createNewProjectHandler(name, descr)} />\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.UserReduser,\r\n    tasks: state.Tasks,\r\n    isShow: false,\r\n    isRequested: state.Tasks ? state.Tasks.IsRequested : false\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Tasks);"]},"metadata":{},"sourceType":"module"}