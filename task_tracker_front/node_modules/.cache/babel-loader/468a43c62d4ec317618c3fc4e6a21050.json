{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Timesheets\\\\Timesheets.js\";\nimport React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport CreateProjectModal from '../CreateProjectModal';\nimport { connect } from 'react-redux';\nimport ActionTypes from '../../store/Actions/index.js';\nimport axios from 'axios';\nimport * as css from \"./TimesheetsStyles.css\";\nimport Moment from 'react-moment';\n\nclass Timesheets extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getTimesheetsHandler(\"\", 1);\n    };\n\n    this.getTimesheetsHandler = (apikey, userId) => {\n      axios.get('http://localhost:57392/timesheet?apikey=qwerty&user_id=1').then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            timesheets: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.deleteTimesheetHandler = timesheetId => {\n      axios.post('http://localhost:57392/timesheetJobs', {\n        apikey: 'qwerty',\n        timesheet_id: timesheetId\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.getTimesheetsHandler(\"\", 1);\n        }\n      });\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.state = {\n      timesheets: [],\n      isShow: false,\n      isRequested: false\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u0447\\u0435\\u0442\\u044B \\u043F\\u043E \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438: \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\")), this.state.timesheets.map(task => React.createElement(ListGroup.Item, {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"inline_element\",\n        href: \"/task/\" + task.task_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, task.task_id), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, new Date(task.date_create))), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, task.project_id), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, task.hours_count), React.createElement(\"div\", {\n        className: \"inline_element\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"))))), React.createElement(CreateProjectModal, {\n        show: this.state.isShow,\n        onHide: () => this.setShow(false),\n        onSave: (name, descr) => this.createNewProjectHandler(name, descr),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  timesheets: state.Timesheets,\n  isShow: false,\n  isRequested: state.Timesheets ? state.Timesheets.IsRequested : false\n});\n\nexport default connect(mapStateToProps, null)(Timesheets);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Timesheets/Timesheets.js"],"names":["React","Component","ListGroup","Button","CreateProjectModal","connect","ActionTypes","axios","css","Moment","Timesheets","constructor","props","componentDidMount","getTimesheetsHandler","apikey","userId","get","then","response","console","log","data","error","alert","setState","timesheets","isRequested","deleteTimesheetHandler","timesheetId","post","timesheet_id","setShow","value","isShow","state","render","map","task","task_id","Date","date_create","project_id","hours_count","name","descr","createNewProjectHandler","mapStateToProps","IsRequested"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CreateProjectModal from '../CreateProjectModal';\r\nimport { connect } from 'react-redux';\r\nimport ActionTypes from '../../store/Actions/index.js';\r\nimport axios from 'axios';\r\nimport * as css from \"./TimesheetsStyles.css\";\r\nimport Moment from 'react-moment';\r\n\r\n\r\nclass Timesheets extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timesheets: [],\r\n            isShow: false,\r\n            isRequested: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getTimesheetsHandler(\"\", 1);\r\n    };\r\n\r\n    getTimesheetsHandler = (apikey, userId) => {\r\n        axios.get('http://localhost:57392/timesheet?apikey=qwerty&user_id=1')\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setState({ timesheets: response.data.data, isRequested: true });\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteTimesheetHandler = (timesheetId) => {\r\n        axios.post('http://localhost:57392/timesheetJobs',\r\n            {\r\n                apikey: 'qwerty',\r\n                timesheet_id: timesheetId\r\n\r\n            }).then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.getTimesheetsHandler(\"\", 1);\r\n                }\r\n            });\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main_fon\">\r\n                <div className=\"inline_block\">\r\n                    <div className=\"text_title_ag\">Отчеты по времени: </div>\r\n                </div>\r\n                <ListGroup>\r\n                    <ListGroup.Item className=\"inline_block\">\r\n                        <div className=\"inline_element\">Название задачи</div>\r\n                        <div className=\"inline_element\">Дата создания</div>\r\n                        <div className=\"inline_element\">Название проекта</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                        <div className=\"inline_element\">Количество часов</div>\r\n                    </ListGroup.Item>\r\n                    {\r\n                        this.state.timesheets.map(task => (\r\n                            <ListGroup.Item className=\"inline_block\">\r\n                                <a className=\"inline_element\" href={\"/task/\" + task.task_id}>{task.task_id}</a>\r\n                                <div className=\"inline_element\">\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(task.date_create)\r\n                                        }\r\n                                    </Moment>\r\n                                </div>\r\n                                <div className=\"inline_element\">{task.project_id}</div>\r\n                                <div className=\"inline_element\">{task.hours_count}</div>\r\n                                <div className=\"inline_element\">\r\n                                    <Button className=\"button_padding\" variant=\"outline-primary\">\r\n                                        Удалить\r\n                                    </Button>\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        ))\r\n                    }\r\n                </ListGroup>\r\n\r\n                <CreateProjectModal show={this.state.isShow}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(name, descr) => this.createNewProjectHandler(name, descr)} />\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    timesheets: state.Timesheets,\r\n    isShow: false,\r\n    isRequested: state.Timesheets ? state.Timesheets.IsRequested : false\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Timesheets);"]},"metadata":{},"sourceType":"module"}