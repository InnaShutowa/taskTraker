{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React from 'react';\nimport './Styles.css';\nimport { createStore } from \"redux\";\nimport Provider from \"react-redux/es/components/Provider\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport CommonStore from \"../../store/Reducers\";\nimport Login from '../Login';\nimport Main from '../Main';\nimport Projects from '../Projects';\nimport Project from '../Project';\nimport Users from '../Users';\nimport UserPage from '../UserPage';\nimport Tasks from '../Tasks';\nimport UserProfile from '../UserProfile/UserProfile';\nimport Task from '../Task';\nimport Timesheets from '../Timesheets';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore, persistReducer, persistCombineReducers } from 'redux-persist';\nconst isAuth = true;\nconst persistor = persistStore(CommonStore);\n\nconst App = () => {\n  var stor = localStorage.getItem('persist:userRoot');\n  const decoded = JSON.parse(stor);\n  console.log(decoded);\n  let header = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n  let users = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  let userPage = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n  let projects = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n  let project = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n  let userProfile = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n  let tasks = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n  let task = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n  let timesheets = React.createElement(Route, {\n    exact: true,\n    path: \"\",\n    component: Main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n\n  if (decoded && decoded.apikey) {\n    header = React.createElement(Route, {\n      exact: true,\n      path: \"\",\n      component: Header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n    userProfile = React.createElement(Route, {\n      exact: true,\n      path: \"/userProfile\",\n      component: UserProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n    tasks = React.createElement(Route, {\n      exact: true,\n      path: \"/tasks\",\n      component: Tasks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n    task = React.createElement(Route, {\n      path: \"/task\",\n      component: Task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n    timesheets = React.createElement(Route, {\n      path: \"/timesheets\",\n      component: Timesheets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n\n    if (decoded.is_admin) {\n      users = React.createElement(Route, {\n        exact: true,\n        path: \"/users\",\n        component: Users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n      projects = React.createElement(Route, {\n        exact: true,\n        path: \"/projects\",\n        component: Projects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n      project = React.createElement(Route, {\n        path: \"/project/\",\n        component: Project,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n      userPage = React.createElement(Route, {\n        path: \"/userPage\",\n        component: UserPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(\"body\", {\n    className: \"back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: CommonStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(PersistGate, {\n    loading: null,\n    persistor: persistor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, header, users, projects, project, userProfile, tasks, task, timesheets)))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/App/App.jsx"],"names":["React","createStore","Provider","BrowserRouter","Route","Header","CommonStore","Login","Main","Projects","Project","Users","UserPage","Tasks","UserProfile","Task","Timesheets","PersistGate","persistStore","persistReducer","persistCombineReducers","isAuth","persistor","App","stor","localStorage","getItem","decoded","JSON","parse","console","log","header","users","userPage","projects","project","userProfile","tasks","task","timesheets","apikey","is_admin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Styles.css';\r\nimport { createStore } from \"redux\";\r\nimport Provider from \"react-redux/es/components/Provider\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Header from \"../Header\";\r\nimport CommonStore from \"../../store/Reducers\"\r\nimport Login from '../Login';\r\nimport Main from '../Main';\r\nimport Projects from '../Projects';\r\nimport Project from '../Project';\r\nimport Users from '../Users';\r\nimport UserPage from '../UserPage';\r\nimport Tasks from '../Tasks';\r\nimport UserProfile from '../UserProfile/UserProfile';\r\nimport Task from '../Task';\r\nimport Timesheets from '../Timesheets';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistStore, persistReducer, persistCombineReducers } from 'redux-persist';\r\n\r\n\r\n\r\nconst isAuth = true;\r\n\r\nconst persistor = persistStore(CommonStore);\r\nconst App = () => {\r\n\r\n  var stor = localStorage.getItem('persist:userRoot');\r\n  const decoded = JSON.parse(stor);\r\n\r\n  console.log(decoded);\r\n  let header = <Route exact path={\"\"} component={Login} />;\r\n  let users = <Route exact path={\"\"} component={Main} />;\r\n  let userPage = <Route exact path={\"\"} component={Main} />;\r\n  let projects = <Route exact path={\"\"} component={Main} />;\r\n  let project = <Route exact path={\"\"} component={Main} />;\r\n  let userProfile = <Route exact path={\"\"} component={Main} />;\r\n  let tasks = <Route exact path={\"\"} component={Main} />;\r\n  let task = <Route exact path={\"\"} component={Main} />;\r\n  let timesheets = <Route exact path={\"\"} component={Main} />;\r\n\r\n  if (decoded && decoded.apikey) {\r\n    header = <Route exact path={\"\"} component={Header} />;\r\n    userProfile = <Route exact path={\"/userProfile\"} component={UserProfile} />;\r\n    tasks = <Route exact path={\"/tasks\"} component={Tasks} />;\r\n    task = <Route path={\"/task\"} component={Task} />;\r\n    timesheets = <Route path={\"/timesheets\"} component={Timesheets} />;\r\n    if (decoded.is_admin) {\r\n      users = <Route exact path={\"/users\"} component={Users} />;\r\n      projects = <Route exact path={\"/projects\"} component={Projects} />;\r\n      project = <Route path={\"/project/\"} component={Project} />;\r\n      userPage = <Route path={\"/userPage\"} component={UserPage} />;\r\n    }\r\n  }\r\n  return <body className=\"back\">\r\n    <Provider store={CommonStore}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <div>\r\n            {header}\r\n            {users}\r\n            {projects}\r\n            {project}\r\n            {userProfile}\r\n            {tasks}\r\n            {task}\r\n            {timesheets}\r\n          </div>\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </body>;\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}