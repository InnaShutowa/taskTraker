{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Task\\\\Task.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport * as css from \"./TaskStyles.css\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport DeleteConfirmModal from '../DeleteConfirmModal';\nimport CreateTimesheetModal from '../CreateTimesheetModal';\nimport ChangeTaskStatusModal from '../ChangeTaskStatusModal';\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getUserInfoHandler();\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.setShowTimesheet = value => {\n      this.setState({\n        isShowTimesheet: value\n      });\n    };\n\n    this.setShowTaskChange = value => {\n      this.setState({\n        isShowTaskChange: value\n      });\n    };\n\n    this.getUserInfoHandler = () => {\n      axios.get('http://localhost:57392/singleTask?apikey=' + this.props.user.apikey + '&task_id=' + this.state.taskId).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            task: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.deleteTaskHandler = taskId => {\n      axios.post('http://localhost:57392/taskJobs', {\n        apikey: this.props.user.apikey,\n        task_id: taskId\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/tasks\");\n        }\n      });\n    };\n\n    this.createTimesheetHandler = (taskId, dateCreate, time, apikey) => {\n      axios.post('http://localhost:57392/timesheet', {\n        apikey: this.props.user.apikey,\n        task_id: this.state.taskId,\n        date_create: dateCreate,\n        time: time\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/tasks\");\n        }\n      });\n    };\n\n    this.changeTaskStatusHandler = (dateCreate, status) => {\n      axios.post('http://localhost:57392/singleUser', {\n        apikey: this.props.user.apikey,\n        task_id: this.state.taskId,\n        date: dateCreate,\n        status: status\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShowTaskChange(false);\n          this.getUserInfoHandler();\n        }\n      });\n    };\n\n    this.state = {\n      task: {},\n      taskId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1)),\n      isRequested: false,\n      isShow: false,\n      isShowTimesheet: false,\n      isShowTaskChange: false\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0435: \"), React.createElement(Button, {\n        onClick: () => this.setShowTimesheet(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442\")), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.state.task.task_name))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.task.task_description))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442a \\u043F\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.state.task.date_deadline && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.task.date_create)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0434\\u0435\\u0434\\u043B\\u0430\\u0439\\u043D\\u0430\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.state.task.date_deadline && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.task.date_deadline)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u044F\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, this.state.task.date_finished && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, new Date(this.state.task.date_finished))))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/userPage/\" + this.state.task.user_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.task.user_full_name)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/userPage/\" + this.state.task.creater_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, this.state.task.creater_full_name)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"), React.createElement(Col, {\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, this.state.task.task_status_text)), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => this.setShowTaskChange(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\"))))), React.createElement(DeleteConfirmModal, {\n        show: this.state.isShow,\n        projectId: this.state.taskId,\n        onHide: () => this.setShow(false),\n        onSave: taskId => this.deleteTaskHandler(taskId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(CreateTimesheetModal, {\n        show: this.state.isShowTimesheet,\n        taskId: this.state.taskId,\n        onHide: () => this.setShowTimesheet(false),\n        onSave: (taskId, dateCreate, time, apikey) => this.createTimesheetHandler(taskId, dateCreate, time, apikey),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(ChangeTaskStatusModal, {\n        show: this.state.isShowTaskChange,\n        projectId: this.state.taskId,\n        onHide: () => this.setShowTaskChange(false),\n        onSave: (dateCreate, status) => this.changeTaskStatusHandler(dateCreate, status),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.UserReduser,\n  task: state.Task,\n  taskId: 0,\n  isShow: false,\n  isShowTimesheet: false,\n  isShowTaskChange: false\n});\n\nexport default connect(mapStateToProps, null)(Task);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Task/Task.js"],"names":["React","Component","Form","Row","Col","Button","css","connect","axios","Moment","DeleteConfirmModal","CreateTimesheetModal","ChangeTaskStatusModal","Task","constructor","props","componentDidMount","getUserInfoHandler","setShow","value","setState","isShow","setShowTimesheet","isShowTimesheet","setShowTaskChange","isShowTaskChange","get","user","apikey","state","taskId","then","response","data","error","alert","task","isRequested","deleteTaskHandler","post","task_id","history","push","createTimesheetHandler","dateCreate","time","date_create","changeTaskStatusHandler","status","date","Number","parseInt","location","pathname","substring","lastIndexOf","render","task_name","task_description","date_deadline","date_finished","Date","user_id","user_full_name","creater_id","creater_full_name","task_status_text","mapStateToProps","UserReduser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport * as css from \"./TaskStyles.css\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport DeleteConfirmModal from '../DeleteConfirmModal';\r\nimport CreateTimesheetModal from '../CreateTimesheetModal';\r\nimport ChangeTaskStatusModal from '../ChangeTaskStatusModal';\r\n\r\n\r\n\r\n\r\nclass Task extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: {\r\n            },\r\n            taskId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1)),\r\n            isRequested: false,\r\n            isShow: false,\r\n            isShowTimesheet: false,\r\n            isShowTaskChange: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUserInfoHandler();\r\n    };\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n    setShowTimesheet = (value) => {\r\n        this.setState({ isShowTimesheet: value });\r\n    }\r\n    \r\n    setShowTaskChange = (value) => {\r\n        this.setState({ isShowTaskChange: value });\r\n    }\r\n\r\n    getUserInfoHandler = () => {\r\n        axios.get('http://localhost:57392/singleTask?apikey='+this.props.user.apikey+'&task_id=' + this.state.taskId)\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setState({ task: response.data.data, isRequested: true });\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteTaskHandler = (taskId) => {\r\n        axios.post('http://localhost:57392/taskJobs',\r\n            {\r\n                apikey: this.props.user.apikey,\r\n                task_id: taskId\r\n            })\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.props.history.push(`/tasks`);\r\n                }\r\n            });\r\n    }\r\n\r\n    createTimesheetHandler = (taskId, dateCreate, time, apikey) => {\r\n        axios.post('http://localhost:57392/timesheet',\r\n            {\r\n                apikey: this.props.user.apikey,\r\n                task_id: this.state.taskId,\r\n                date_create: dateCreate,\r\n                time: time\r\n            })\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.props.history.push(`/tasks`);\r\n                }\r\n            });\r\n    }\r\n\r\n    changeTaskStatusHandler = (dateCreate, status) => {\r\n        axios.post('http://localhost:57392/singleUser',\r\n        {\r\n            apikey: this.props.user.apikey,\r\n            task_id: this.state.taskId,\r\n            date: dateCreate,\r\n            status: status\r\n        })\r\n        .then(response => {\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setShowTaskChange(false);\r\n                this.getUserInfoHandler();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main\">\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Информация о задаче: </div>\r\n                    {/* <Button onClick={() => this.setShow(true)} className=\"button_padding\" variant=\"outline-primary\">\r\n                        Удалить задачу\r\n                    </Button> */}\r\n                    <Button onClick={() => this.setShowTimesheet(true)} className=\"button_padding\" variant=\"outline-primary\">\r\n                        Добавить отчет\r\n                    </Button>\r\n                </div>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Название\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_name\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Описание\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_description\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Датa постановки\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_deadline && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            this.state.task.date_create\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Дата дедлайна\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_deadline && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            this.state.task.date_deadline\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Дата завершения\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_finished && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(this.state.task.date_finished)\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Исполнитель\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                <a href={\"/userPage/\"+this.state.task.user_id}>\r\n                                    {\r\n                                        this.state.task.user_full_name\r\n                                    }\r\n                                </a>\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Создатель задачи\r\n                        </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                <a href={\"/userPage/\"+this.state.task.creater_id}>\r\n                                    {\r\n                                        this.state.task.creater_full_name\r\n                                    }\r\n                                </a>\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Статус\r\n                        </Form.Label>\r\n                        <Col sm={2}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_status_text\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <Form.Label column sm={12}>\r\n                                <Button onClick={() => this.setShowTaskChange(true)} className=\"button_padding\" variant=\"outline-primary\">\r\n                                    Изменить статус\r\n                                </Button>\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <DeleteConfirmModal show={this.state.isShow}\r\n                    projectId={this.state.taskId}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(taskId) => this.deleteTaskHandler(taskId)}\r\n                />\r\n\r\n                <CreateTimesheetModal show={this.state.isShowTimesheet}\r\n                    taskId={this.state.taskId}\r\n                    onHide={() => this.setShowTimesheet(false)}\r\n                    onSave={(taskId, dateCreate, time, apikey) => this.createTimesheetHandler(taskId, dateCreate, time, apikey)}\r\n                />\r\n\r\n                <ChangeTaskStatusModal show={this.state.isShowTaskChange}\r\n                    projectId={this.state.taskId}\r\n                    onHide={() => this.setShowTaskChange(false)}\r\n                    onSave={(dateCreate, status) => this.changeTaskStatusHandler(dateCreate, status)}\r\n                />\r\n\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.UserReduser,\r\n    task: state.Task,\r\n    taskId: 0,\r\n    isShow: false,\r\n    isShowTimesheet: false,\r\n    isShowTaskChange: false\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Task);"]},"metadata":{},"sourceType":"module"}