{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Project\\\\Project.jsx\";\nimport React, { useState, Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport DeleteConfirmModal from '../DeleteConfirmModal';\nimport AddUserInProjectModal from '../AddUserInProjectModal';\nimport CreateTaskModal from '../CreateTaskModal';\nimport * as css from \"./StylesProject.css\";\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport projectsActions from '../../store/Actions';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport { replaceState, withRouter, pushState } from 'react-router';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getProjectHandler(\"\", this.state.projectId);\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.setShowAgain = value => {\n      this.setState({\n        isShowAgain: value\n      });\n    };\n\n    this.setShowAddUser = value => {\n      this.setState({\n        isShowAddUser: value\n      });\n      this.getUsersListHandler();\n    };\n\n    this.getUsersListHandler = () => {\n      axios.get('http://localhost:57392/userToProject?apikey=qwerty&project_id=' + this.state.projectId).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n          this.setShowAddUser(false);\n        } else {\n          this.setState({\n            usersToAdd: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.getProjectHandler = (apikey, projectId) => {\n      axios.get('http://localhost:57392/projectInfo?apikey=qwerty&project_id=' + projectId).then(response => {\n        console.log(response);\n        this.setState({\n          project: response.data.data,\n          isRequested: true\n        });\n      });\n    };\n\n    this.addUserInProjectHandler = (apikey, userId) => {\n      axios.post('http://localhost:57392/admin', {\n        apikey: \"qwerty\",\n        project_id: this.state.projectId,\n        user_id: userId\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/projects\");\n        }\n      });\n    };\n\n    this.deleteProjectHandler = projectId => {\n      axios.post('http://localhost:57392/projectInfo', {\n        apikey: \"qwerty\",\n        project_id: projectId\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/projects\");\n        }\n      });\n    };\n\n    this.getProjectsListHandler = apikey => {\n      axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\n        this.setState({\n          projects: response.data.data,\n          isRequested: true\n        });\n      });\n    };\n\n    this.createTaskHandler = data => {\n      axios.post('http://localhost:57392/task', {\n        apikey: \"qwerty\",\n        project_id: this.state.projectId,\n        email: data.email,\n        title: data.title,\n        description: data.description,\n        deadline_date: data.deadline_date\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShowAgain(false);\n          this.getProjectHandler(\"\", this.state.projectId);\n        }\n      });\n    };\n\n    this.state = {\n      usersToAdd: [],\n      project: {},\n      isShowAgain: false,\n      isShow: false,\n      isRequested: false,\n      isShowAddUser: false,\n      projectId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1))\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      if (!this.state.project) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430...\");\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \" \", this.state.project.project_name, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text_author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"\\u0410\\u0432\\u0442\\u043E\\u0440: \", this.state.project.creater_first_name + \" \" + this.state.project.creater_last_name)), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"\\u0412\\u044B\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0443\"), React.createElement(Button, {\n        onClick: () => this.setShow(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\")), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.state.project.description), this.state.project.users_list.length !== 0 && React.createElement(\"div\", {\n        className: \"users_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), React.createElement(Button, {\n        onClick: () => this.setShowAddUser(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\")), this.state.project.users_list.map(user => {\n        return React.createElement(ListGroup.Item, {\n          className: \"inline_block_elements\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"inline_block_users\",\n          href: \"/userPage/\" + user.user_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, user.full_name), React.createElement(\"div\", {\n          className: \"inline_block_users\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, user.email));\n      })), React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043F\\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0443\"), React.createElement(Button, {\n        onClick: () => this.setShowAgain(true),\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\")), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.project.task_list,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"task_id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Id \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"task_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"date_create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"user_first_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044F\"), React.createElement(TableHeaderColumn, {\n        dataField: \"hours_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"), React.createElement(TableHeaderColumn, {\n        dataField: \"task_status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"))), React.createElement(DeleteConfirmModal, {\n        show: this.state.isShow,\n        projectId: this.state.projectId,\n        onHide: () => this.setShow(false),\n        onSave: projectId => this.deleteProjectHandler(projectId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(AddUserInProjectModal, {\n        show: this.state.isShowAddUser,\n        projectId: this.state.projectId,\n        onHide: () => this.setShowAddUser(false),\n        onSave: (apikey, userId) => this.addUserInProjectHandler(apikey, userId),\n        usersToAdd: this.state.usersToAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(CreateTaskModal, {\n        show: this.state.isShowAgain,\n        onHide: () => this.setShowAgain(false),\n        onSave: data => this.createTaskHandler(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  project: state.Project,\n  isShow: false,\n  isShowAddUser: false,\n  isRequested: state.Projects ? state.Projects.IsRequested : false,\n  projectId: 0,\n  usersToAdd: [],\n  isShowAgain: false\n});\n\nexport default connect(mapStateToProps, null)(Project);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Project/Project.jsx"],"names":["React","useState","Component","ListGroup","Button","DeleteConfirmModal","AddUserInProjectModal","CreateTaskModal","css","BootstrapTable","TableHeaderColumn","projectsActions","axios","connect","replaceState","withRouter","pushState","BrowserRouter","Route","Project","constructor","props","componentDidMount","getProjectHandler","state","projectId","setShow","value","setState","isShow","setShowAgain","isShowAgain","setShowAddUser","isShowAddUser","getUsersListHandler","get","then","response","console","log","data","error","alert","usersToAdd","isRequested","apikey","project","addUserInProjectHandler","userId","post","project_id","user_id","history","push","deleteProjectHandler","getProjectsListHandler","projects","createTaskHandler","email","title","description","deadline_date","Number","parseInt","location","pathname","substring","lastIndexOf","render","project_name","creater_first_name","creater_last_name","users_list","length","map","user","full_name","task_list","mapStateToProps","Projects","IsRequested"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DeleteConfirmModal from '../DeleteConfirmModal';\r\nimport AddUserInProjectModal from '../AddUserInProjectModal';\r\nimport CreateTaskModal from '../CreateTaskModal';\r\nimport * as css from \"./StylesProject.css\";\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\nimport projectsActions from '../../store/Actions';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport { replaceState, withRouter, pushState } from 'react-router';\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\nclass Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            usersToAdd: [],\r\n            project: {},\r\n            isShowAgain: false,\r\n            isShow: false,\r\n            isRequested: false,\r\n            isShowAddUser: false,\r\n            projectId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/')+1))\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getProjectHandler(\"\", this.state.projectId);\r\n    };\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n    \r\n    setShowAgain = (value) => {\r\n        this.setState({ isShowAgain: value });\r\n    }\r\n\r\n    setShowAddUser = (value) => {\r\n        this.setState({ isShowAddUser: value });\r\n        this.getUsersListHandler();\r\n    }\r\n\r\n    getUsersListHandler = () =>{\r\n        axios.get('http://localhost:57392/userToProject?apikey=qwerty&project_id='+this.state.projectId)\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n                this.setShowAddUser(false);\r\n            } else{\r\n                this.setState({usersToAdd: response.data.data, isRequested: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    getProjectHandler = (apikey, projectId) => {\r\n        axios.get('http://localhost:57392/projectInfo?apikey=qwerty&project_id='+projectId)\r\n        .then(response => {\r\n            console.log(response);\r\n            this.setState({project: response.data.data, isRequested: true});\r\n        });\r\n    }\r\n\r\n    addUserInProjectHandler = (apikey, userId) => {\r\n    \r\n        axios.post('http://localhost:57392/admin',\r\n        {\r\n            apikey: \"qwerty\",\r\n            project_id: this.state.projectId,\r\n            user_id: userId\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setShow(false);\r\n                this.props.history.push(`/projects`);\r\n            }\r\n        });\r\n    }\r\n\r\n    // saveAddedUser = (apikey, userId) => {\r\n    //     axios.post('http://localhost:57392/userToProject',\r\n    //     {\r\n    //         apikey: \"qwerty\",\r\n    //         user_id: userId,\r\n    //         project_id: this.state.projectId\r\n    //     })\r\n    //     .then(response => {\r\n    //         console.log(response);\r\n    //         if (response.data.error) {\r\n    //             alert(response.data.error);\r\n    //         } else {\r\n    //             this.setShow(false);\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    deleteProjectHandler = (projectId) => {\r\n        axios.post('http://localhost:57392/projectInfo',\r\n        {\r\n            apikey: \"qwerty\",\r\n            project_id: projectId\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setShow(false);\r\n                this.props.history.push(`/projects`);\r\n            }\r\n        });\r\n    }\r\n\r\n    getProjectsListHandler = (apikey) =>{\r\n        axios.get('http://localhost:57392/project?apikey=qwerty').then(response => {\r\n            this.setState({projects: response.data.data, isRequested: true});\r\n        });\r\n    }\r\n\r\n    createTaskHandler = (data) => {\r\n        axios.post('http://localhost:57392/task',\r\n        {\r\n            apikey: \"qwerty\",\r\n            project_id: this.state.projectId,\r\n            email: data.email,\r\n            title: data.title,\r\n            description: data.description,\r\n            deadline_date: data.deadline_date\r\n        })\r\n        .then(response => {\r\n            console.log(response);\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                this.setShowAgain(false);\r\n                this.getProjectHandler(\"\", this.state.projectId);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.isRequested ) {\r\n            if (!this.state.project) return <div>Страница не найдена...</div>;\r\n\r\n            console.log(this.state);\r\n            return <div className=\"main_fon\">\r\n            <div className=\"inline_block\">\r\n                <div className=\"title_block\">\r\n                    <div className=\"text_title\"> {this.state.project.project_name} </div>\r\n                    <br />\r\n                    <div className=\"text_author\">\r\n                        Автор: {this.state.project.creater_first_name + \" \" + \r\n                        this.state.project.creater_last_name}\r\n                    </div>\r\n                </div>\r\n    \r\n                <Button className=\"button_padding\" variant=\"outline-primary\">Выгрузить статистику</Button>\r\n                <Button onClick={()=>this.setShow(true)} className=\"button_padding\" variant=\"outline-primary\">Удалить проект</Button>\r\n            </div>\r\n            <div className=\"text_description\">\r\n                {this.state.project.description}\r\n            </div>\r\n    \r\n            {\r\n                this.state.project.users_list.length !== 0 && <div className=\"users_list\">\r\n                    <div className=\"inline_block_users_title\">\r\n                        <div className=\"title_block\">Список пользователей</div>\r\n                        <Button onClick={()=>this.setShowAddUser(true)} className=\"button_padding\" variant=\"outline-primary\">Добавить пользователя</Button>\r\n                    </div>\r\n                    {\r\n                       this.state.project.users_list.map(user => {\r\n                            return <ListGroup.Item className=\"inline_block_elements\">\r\n                                <a className=\"inline_block_users\" href={\"/userPage/\"+user.user_id}>\r\n                                    {user.full_name}\r\n                                </a>\r\n                                <div className=\"inline_block_users\">{user.email}</div>\r\n                            </ListGroup.Item>;\r\n                        })\r\n                    }\r\n                </div>\r\n            }\r\n    \r\n            <div className=\"inline_block_users_title\">\r\n                <div className=\"title_block\">\r\n                    Задачи по проекту\r\n                </div>\r\n                <Button onClick={()=>this.setShowAgain(true)} \r\n                className=\"button_padding\" \r\n                variant=\"outline-primary\">\r\n                    Добавить задачу\r\n                </Button>\r\n                \r\n            </div>\r\n            <div className=\"text_description\">\r\n                <BootstrapTable data={this.state.project.task_list} striped hover>\r\n                    <TableHeaderColumn isKey dataField='task_id'>Id задачи</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='task_name'>Название задачи</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='date_create'>Дата постановки</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='user_first_name'>Исполнителя</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='hours_count'>Затраченное время</TableHeaderColumn>\r\n                    <TableHeaderColumn dataField='task_status'>Статус</TableHeaderColumn>\r\n                </BootstrapTable>\r\n            </div>\r\n            \r\n            <DeleteConfirmModal show={this.state.isShow} \r\n            projectId={this.state.projectId}\r\n            onHide={() => this.setShow(false)} \r\n            onSave={(projectId)=> this.deleteProjectHandler(projectId)}\r\n            />\r\n\r\n            <AddUserInProjectModal show={this.state.isShowAddUser} \r\n            projectId={this.state.projectId}\r\n            onHide={() => this.setShowAddUser(false)} \r\n            onSave={(apikey, userId)=> this.addUserInProjectHandler(apikey, userId)}\r\n            usersToAdd={this.state.usersToAdd}\r\n            />\r\n\r\n            <CreateTaskModal show={this.state.isShowAgain} \r\n            onHide={() => this.setShowAgain(false)} \r\n            onSave={(data)=>this.createTaskHandler(data)} />\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    project: state.Project,\r\n    isShow: false,\r\n    isShowAddUser: false,\r\n    isRequested: state.Projects ? state.Projects.IsRequested : false,\r\n    projectId: 0,\r\n    usersToAdd: [],\r\n    isShowAgain: false\r\n});\r\nexport default connect(mapStateToProps, null)(Project);"]},"metadata":{},"sourceType":"module"}