{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\UserPage\\\\UserPage.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport DeleteConfirmModal from '../DeleteConfirmModal';\nimport * as css from \"./StylesUserPage.css\";\n\nclass UserPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getUserInfoHandler();\n    };\n\n    this.getUserInfoHandler = () => {\n      axios.get('http://localhost:57392/admin?apikey=' + this.props.userReducer.apikey + '&user_id=' + this.state.userId).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            user: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.setShow = value => {\n      this.setState({\n        isShow: value\n      });\n    };\n\n    this.deleteUserHandler = userId => {\n      axios.post('http://localhost:57392/userPage', {\n        apikey: this.props.userReducer.apikey,\n        user_id: userId\n      }).then(response => {\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.props.history.push(\"/users\");\n        }\n      });\n    };\n\n    this.CellTaskIdFormatter = (cell, row) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/task/\" + cell,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, cell));\n    };\n\n    this.CellFormatter = (cell, row) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, new Date(cell)));\n    };\n\n    this.setStart = value => {\n      this.setState({\n        start: value.target.value\n      });\n    };\n\n    this.setFinish = value => {\n      this.setState({\n        isShow: value.target.value\n      });\n    };\n\n    this.setShowGetForm = () => {\n      this.setState({\n        isShowGetForm: true\n      });\n    };\n\n    this.getFormHandler = () => {\n      axios.post('http://localhost:57392/statistic', {\n        apikey: this.props.userReducer.apikey,\n        user_id: this.state.userId,\n        start: this.state.start,\n        finish: this.state.finish\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          let filename = \"tasks_form.pdf\";\n          var pdf = new jsPDF();\n          pdf.text(10, 10, response.data);\n          pdf.setFont(\"helvetica\");\n          pdf.setFontType(\"bold\");\n          pdf.setFontSize(9);\n          pdf.save(filename);\n        }\n      });\n    };\n\n    this.state = {\n      user: {\n        first_name: '',\n        last_name: '',\n        is_admin: '',\n        birth_date: new Date()\n      },\n      isRequested: false,\n      isShow: false,\n      isShowGetForm: false,\n      start: null,\n      finish: null,\n      userId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1))\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main_fon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"headingPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\"), React.createElement(Button, {\n        className: \"lineValueButton\",\n        onClick: () => this.setShow(true),\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), this.state.isShowGetForm && React.createElement(\"div\", {\n        className: \"inline_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"birthday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\\u0430\"), React.createElement(Form.Control, {\n        type: \"date\",\n        onChange: this.setStart,\n        placeholder: \"01.19.1998\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"birthday\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\\u0430\"), React.createElement(Form.Control, {\n        type: \"date\",\n        onChange: this.setFinish,\n        placeholder: \"01.19.1998\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        onClick: this.getFormHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u0443\")), !this.state.isShowGetForm && React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        onClick: () => this.setShowGetForm(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0444\\u043E\\u0440\\u043C\\u0443\")), React.createElement(\"div\", {\n        className: \"form_class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"\\u0418\\u043C\\u044F\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.state.user.first_name))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, this.state.user.last_name))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, this.state.user.phone))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, this.state.user.email))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, new Date(this.state.user.birth_date))))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"\\u0420\\u043E\\u043B\\u044C\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.state.user.is_admin ? \"ADMIN\" : \"USER\"))))), React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.user.tasks_list,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"task_id\",\n        dataFormat: this.CellTaskIdFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Id \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"task_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"date_create\",\n        dataFormat: this.CellFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"hours_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0442\\u0440\\u0430\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F\"), React.createElement(TableHeaderColumn, {\n        dataField: \"task_status_text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"))), React.createElement(\"div\", {\n        className: \"inline_block_users_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u0447\\u0435\\u0442\\u044B \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"), React.createElement(\"div\", {\n        className: \"text_description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        data: this.state.user.tasks_list,\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"task_id\",\n        dataFormat: this.CellTaskIdFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TableHeaderColumn, {\n        dataField: \"task_name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), React.createElement(TableHeaderColumn, {\n        dataField: \"date_create\",\n        dataFormat: this.CellFormatter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(TableHeaderColumn, {\n        dataField: \"hours_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0430\\u0441\\u043E\\u0432\"))), React.createElement(DeleteConfirmModal, {\n        show: this.state.isShow,\n        projectId: this.state.userId,\n        onHide: () => this.setShow(false),\n        onSave: userId => this.deleteUserHandler(userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userReducer: state.UserReduser,\n  user: state.User,\n  userId: 0,\n  isShow: false,\n  start: null,\n  finish: null,\n  isShowGetForm: false\n});\n\nexport default connect(mapStateToProps, null)(UserPage);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/UserPage/UserPage.js"],"names":["React","Component","Form","Row","Col","Button","connect","axios","Moment","BootstrapTable","TableHeaderColumn","DeleteConfirmModal","css","UserPage","constructor","props","componentDidMount","getUserInfoHandler","get","userReducer","apikey","state","userId","then","response","data","error","alert","setState","user","isRequested","setShow","value","isShow","deleteUserHandler","post","user_id","history","push","CellTaskIdFormatter","cell","row","CellFormatter","Date","setStart","start","target","setFinish","setShowGetForm","isShowGetForm","getFormHandler","finish","console","log","filename","pdf","jsPDF","text","setFont","setFontType","setFontSize","save","first_name","last_name","is_admin","birth_date","Number","parseInt","location","pathname","substring","lastIndexOf","render","phone","email","tasks_list","mapStateToProps","UserReduser","User"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\r\nimport DeleteConfirmModal from '../DeleteConfirmModal';\r\nimport * as css from \"./StylesUserPage.css\";\r\n\r\n\r\nclass UserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                first_name: '',\r\n                last_name: '',\r\n                is_admin: '',\r\n                birth_date: new Date()\r\n            },\r\n            isRequested: false,\r\n            isShow: false,\r\n            isShowGetForm: false,  \r\n            start: null,\r\n            finish: null,\r\n            userId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1))\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUserInfoHandler();\r\n    };\r\n\r\n    getUserInfoHandler = () => {\r\n        axios.get('http://localhost:57392/admin?apikey='+this.props.userReducer.apikey+'&user_id=' + this.state.userId)\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setState({ user: response.data.data, isRequested: true });\r\n                }\r\n            });\r\n    }\r\n\r\n    setShow = (value) => {\r\n        this.setState({ isShow: value });\r\n    }\r\n\r\n    deleteUserHandler = (userId) => {\r\n        axios.post('http://localhost:57392/userPage', {\r\n            apikey: this.props.userReducer.apikey,\r\n            user_id: userId\r\n        })\r\n            .then(response => {\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.props.history.push(`/users`);\r\n                }\r\n            });\r\n    }\r\n\r\n    CellTaskIdFormatter = (cell, row) => {\r\n        return (<div><a href={\"/task/\" + cell}>{cell}</a></div>);\r\n    }\r\n\r\n    CellFormatter = (cell, row) => {\r\n        return (<div>\r\n            <Moment format=\"DD.MM.YYYY\">\r\n                {\r\n                    new Date(cell)\r\n                }\r\n            </Moment>\r\n        </div>);\r\n    }\r\n    \r\n    setStart = (value) => {\r\n        this.setState({ start: value.target.value });\r\n    }\r\n\r\n    setFinish = (value) => {\r\n        this.setState({ isShow: value.target.value });\r\n    }\r\n\r\n    setShowGetForm = () => {\r\n        this.setState({ isShowGetForm: true });\r\n    }\r\n\r\n\r\n    getFormHandler = () => {\r\n        axios.post('http://localhost:57392/statistic',\r\n        {\r\n            apikey: this.props.userReducer.apikey,\r\n            user_id: this.state.userId,\r\n            start: this.state.start,\r\n            finish: this.state.finish\r\n        }).then(response => {\r\n            console.log(response);\r\n            if (response.data.error) {\r\n                alert(response.data.error);\r\n            } else {\r\n                let filename = \"tasks_form.pdf\";\r\n\r\n                var pdf = new jsPDF();\r\n                pdf.text(10, 10, response.data);\r\n                pdf.setFont(\"helvetica\");\r\n                pdf.setFontType(\"bold\");\r\n                pdf.setFontSize(9);\r\n                pdf.save(filename);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main_fon\">\r\n                <div className=\"inline\">\r\n                    <div className=\"headingPage\">\r\n                        Информация о пользователе\r\n                    </div>\r\n                    <Button className=\"lineValueButton\" onClick={() => this.setShow(true)} variant=\"primary\" type=\"submit\">\r\n                        Удалить\r\n                    </Button>\r\n                    {\r\n                        this.state.isShowGetForm && <div className=\"inline_block\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"birthday\">\r\n                                    <Form.Label>Начало периода</Form.Label>\r\n                                    <Form.Control type=\"date\" onChange={this.setStart} placeholder=\"01.19.1998\" />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"birthday\">\r\n                                    <Form.Label>Конец периода</Form.Label>\r\n                                    <Form.Control type=\"date\" onChange={this.setFinish} placeholder=\"01.19.1998\" />\r\n                                </Form.Group>\r\n\r\n                            </Form>\r\n                            <Button\r\n                                className=\"button_padding\"\r\n                                variant=\"outline-primary\"\r\n                                onClick={this.getFormHandler}>\r\n                                Получить форму\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        !this.state.isShowGetForm &&\r\n                        <Button\r\n                            className=\"button_padding\"\r\n                            variant=\"outline-primary\"\r\n                            onClick={() => this.setShowGetForm()}>\r\n                            Получить форму\r\n                            </Button>\r\n                    }\r\n                </div>\r\n                <div className=\"form_class\">\r\n                    <Form>\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                            <Form.Label className=\"boldLineHead\" column sm={2}>\r\n                                Имя\r\n                        </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Label column sm={2}>\r\n                                    {\r\n                                        this.state.user.first_name\r\n                                    }\r\n                                </Form.Label>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                            <Form.Label className=\"boldLineHead\" column sm={2}>\r\n                                Фамилия\r\n                        </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Label column sm={2}>\r\n                                    {\r\n                                        this.state.user.last_name\r\n                                    }\r\n                                </Form.Label>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                            <Form.Label className=\"boldLineHead\" column sm={2}>\r\n                                Номер телефона\r\n                        </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Label column sm={2}>\r\n                                    {\r\n                                        this.state.user.phone\r\n                                    }\r\n                                </Form.Label>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                            <Form.Label className=\"boldLineHead\" column sm={2}>\r\n                                Email\r\n                        </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Label column sm={2}>\r\n                                    {\r\n                                        this.state.user.email\r\n                                    }\r\n                                </Form.Label>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                            <Form.Label className=\"boldLineHead\" column sm={2}>\r\n                                Дата рождения\r\n                        </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Label column sm={2}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(this.state.user.birth_date)\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                            <Form.Label className=\"boldLineHead\" column sm={2}>\r\n                                Роль\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Label column sm={2}>\r\n                                    {\r\n                                        this.state.user.is_admin ? \"ADMIN\" : \"USER\"\r\n                                    }\r\n                                </Form.Label>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n\r\n                <div className=\"inline_block_users_title\">\r\n                    Задачи пользователя\r\n                </div>\r\n                <div className=\"text_description\">\r\n                    <BootstrapTable data={this.state.user.tasks_list} striped hover>\r\n                        <TableHeaderColumn isKey dataField='task_id' dataFormat={this.CellTaskIdFormatter}>Id задачи</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='task_name'>Название задачи</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='date_create' dataFormat={this.CellFormatter}>Дата постановки</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='hours_count'>Затраченное время</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='task_status_text'>Статус</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n\r\n                <div className=\"inline_block_users_title\">\r\n                    Отчеты пользователя\r\n                </div>\r\n                <div className=\"text_description\">\r\n                    <BootstrapTable data={this.state.user.tasks_list} striped hover>\r\n                        <TableHeaderColumn isKey dataField='task_id' dataFormat={this.CellTaskIdFormatter}>Название задачи</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='task_name'>Название проекта</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='date_create' dataFormat={this.CellFormatter}>Дата создания</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='hours_count'>Количество часов</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n\r\n                <DeleteConfirmModal show={this.state.isShow}\r\n                    projectId={this.state.userId}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(userId) => this.deleteUserHandler(userId)} />\r\n\r\n            </div>;\r\n\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userReducer: state.UserReduser,\r\n    user: state.User,\r\n    userId: 0,\r\n    isShow: false,\r\n    start: null,\r\n    finish: null,\r\n    isShowGetForm: false,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(UserPage);"]},"metadata":{},"sourceType":"module"}