{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\taskTraker\\\\task_tracker_front\\\\src\\\\components\\\\Task\\\\Task.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport * as css from \"./TaskStyles.css\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport DeleteConfirmModal from '../DeleteConfirmModal';\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getUserInfoHandler(\"\");\n    };\n\n    this.getUserInfoHandler = apikey => {\n      axios.get('http://localhost:57392/singleTask?apikey=qwerty&task_id=' + this.state.taskId).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setState({\n            task: response.data.data,\n            isRequested: true\n          });\n        }\n      });\n    };\n\n    this.deleteTaskHandler = apikey => {\n      axios.post('http://localhost:57392/taskJobs', {\n        apikey: \"qwerty\",\n        task_id: this.state.taskId\n      }).then(response => {\n        console.log(response);\n\n        if (response.data.error) {\n          alert(response.data.error);\n        } else {\n          this.setShow(false);\n          this.props.history.push(\"/tasks\");\n        }\n      });\n    };\n\n    this.state = {\n      task: {},\n      taskId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1)),\n      isRequested: false\n    };\n  }\n\n  render() {\n    if (this.state.isRequested) {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inline_block_top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text_title_ag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u0437\\u0430\\u0434\\u0430\\u0447\\u0435: \"), React.createElement(Button, {\n        className: \"button_padding\",\n        variant: \"outline-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\")), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.task.task_name))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.task.task_description))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442a \\u043F\\u043E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043A\\u0438\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.task.date_create))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0434\\u0435\\u0434\\u043B\\u0430\\u0439\\u043D\\u0430\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.task.date_deadline && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.task.date_deadline)))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u044F\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.task.date_finished && React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"DD.MM.YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, new Date(this.state.task.date_finished))))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.task.user_first_name + \" \" + this.state.task.user_last_name))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u0435\\u043B\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.state.task.create_first_name + \" \" + this.state.task.creater_last_name))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        className: \"boldLineHead\",\n        column: true,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"), React.createElement(Col, {\n        sm: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, this.state.task.task_status_text)))), React.createElement(DeleteConfirmModal, {\n        show: this.state.isShow,\n        projectId: this.state.projectId,\n        onHide: () => this.setShow(false),\n        onSave: projectId => this.deleteProjectHandler(projectId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  task: state.Task,\n  taskId: 0\n});\n\nexport default connect(mapStateToProps, null)(Task);","map":{"version":3,"sources":["C:/projects/taskTraker/task_tracker_front/src/components/Task/Task.js"],"names":["React","Component","Form","Row","Col","Button","css","connect","axios","Moment","DeleteConfirmModal","Task","constructor","props","componentDidMount","getUserInfoHandler","apikey","get","state","taskId","then","response","console","log","data","error","alert","setState","task","isRequested","deleteTaskHandler","post","task_id","setShow","history","push","Number","parseInt","location","pathname","substring","lastIndexOf","render","task_name","task_description","date_create","date_deadline","date_finished","Date","user_first_name","user_last_name","create_first_name","creater_last_name","task_status_text","isShow","projectId","deleteProjectHandler","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport * as css from \"./TaskStyles.css\";\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport DeleteConfirmModal from '../DeleteConfirmModal';\r\n\r\n\r\nclass Task extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: {\r\n            },\r\n            taskId: Number.parseInt(props.location.pathname.substring(props.location.pathname.lastIndexOf('/') + 1)),\r\n            isRequested: false\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.getUserInfoHandler(\"\");\r\n    };\r\n\r\n    getUserInfoHandler = (apikey) => {\r\n        axios.get('http://localhost:57392/singleTask?apikey=qwerty&task_id=' + this.state.taskId)\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setState({ task: response.data.data, isRequested: true });\r\n                }\r\n            });\r\n    }\r\n\r\n    deleteTaskHandler = (apikey) => {\r\n        axios.post('http://localhost:57392/taskJobs',\r\n            {\r\n                apikey: \"qwerty\",\r\n                task_id: this.state.taskId\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data.error) {\r\n                    alert(response.data.error);\r\n                } else {\r\n                    this.setShow(false);\r\n                    this.props.history.push(`/tasks`);\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isRequested) {\r\n            return <div className=\"main\">\r\n                <div className=\"inline_block_top\">\r\n                    <div className=\"text_title_ag\">Информация о задаче: </div>\r\n                    <Button className=\"button_padding\" variant=\"outline-primary\">Удалить задачу</Button>\r\n                </div>\r\n                <Form>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Название\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_name\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Описание\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_description\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Датa постановки\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.date_create\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Дата дедлайна\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_deadline && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            this.state.task.date_deadline\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Дата завершения\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            {\r\n                                this.state.task.date_finished && <Form.Label column sm={12}>\r\n                                    <Moment format=\"DD.MM.YYYY\">\r\n                                        {\r\n                                            new Date(this.state.task.date_finished)\r\n                                        }\r\n                                    </Moment>\r\n                                </Form.Label>\r\n                            }\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Исполнитель\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.user_first_name +\r\n                                    \" \" + this.state.task.user_last_name\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Создатель задачи\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.create_first_name + \" \" + this.state.task.creater_last_name\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                        <Form.Label className=\"boldLineHead\" column sm={4}>\r\n                            Статус\r\n                    </Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Label column sm={12}>\r\n                                {\r\n                                    this.state.task.task_status_text\r\n                                }\r\n                            </Form.Label>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n\r\n                <DeleteConfirmModal show={this.state.isShow}\r\n                    projectId={this.state.projectId}\r\n                    onHide={() => this.setShow(false)}\r\n                    onSave={(projectId) => this.deleteProjectHandler(projectId)}\r\n                />\r\n\r\n            </div>;\r\n        } else {\r\n            return <div>Loading...</div>\r\n        }\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    task: state.Task,\r\n    taskId: 0\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Task);"]},"metadata":{},"sourceType":"module"}